[{"path":"https://somalogic.github.io/SomaPlotr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright © 2023 SomaLogic Operating Co., Inc. Permission hereby granted, free charge, person obtaining copy SomaPlotr software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDER LIABLE CLAIM, DAMAGES, LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/SECURITY.html","id":"reporting-a-vulnerability","dir":"","previous_headings":"","what":"Reporting a Vulnerability","title":"Security Policy","text":"create issue send e-mail techsupport@somalogic.com leontiar@gmail.com report vulnerability","code":""},{"path":"https://somalogic.github.io/SomaPlotr/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with SomaPlotr","title":"Getting help with SomaPlotr","text":"Thanks using SomaPlotr! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with SomaPlotr","text":"can’t reproduce bug, can’t fix ! Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (excellent ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help!.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with SomaPlotr","text":"Armed reprex, next step figure ask. ’s R related question: start community.rstudio.com /StackOverflow. people answer questions. ’s bug SomaPlotr: ’re right place; please file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . non-coding related feedback inquiries please reach techsupport@somalogic.com. opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers, :pr, :closed, etc., needed, e.g. ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with SomaPlotr","text":"aim respond questions simple bugs within 24 - 48h, particularly questions accompanied reprex can typically addressed quickly. complex bugs feature requests can take longer, require deeper discussion regarding software development lifecycle SomaPlotr. mentioned , may always reach Global Scientific Engagement team techsupport@somalogic.com general inquiries support@somalogic.com.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/articles/SomaPlotr.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Introduction to SomaPlotr","text":"SomaPlotr can loaded simple call library(): addition SomaPlotr, vignette require following packages example data sets, data wrangling functions, plotting utilities. plots vignette generated using example ADAT provided SomaDataIO:","code":"library(SomaPlotr) library(dplyr) library(ggplot2) library(SomaDataIO) data <- SomaDataIO::example_data"},{"path":"https://somalogic.github.io/SomaPlotr/articles/SomaPlotr.html","id":"cdf-and-pdf-plots","dir":"Articles","previous_headings":"","what":"CDF and PDF Plots","title":"Introduction to SomaPlotr","text":"Cumulative distribution function (CDF) probability density function (PDF) plots frequently used visualization methods analyzing RFU values obtained SomaScan. plots can generated various forms using functions provided SomaPlotr.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/articles/SomaPlotr.html","id":"pdf-plots","dir":"Articles","previous_headings":"CDF and PDF Plots","what":"PDF Plots","title":"Introduction to SomaPlotr","text":"PDF plot created numeric (double) vector , usually, RFU values plotPDF():  plot fairly long tail, highlights common feature SomaScan data RFU space. consequence, typically advise plot (analyse) RFU data log10() space:  plot displays characteristic bimodal distribution, suggesting underlying structure may present. plotPDFbyGroup() creates PDF plot split grouping variable (usually) metadata, e.g. Sex. function differs plotPDF() requires data frame input. plot , variable Sex used stratify groups:  Using plotPDFlist(), PDF plot can generated arbitrary named list numeric vectors, one smoothed kernel density curve per list element:","code":"plotPDF(data$seq.8468.19) plotPDF(log10(data$seq.8468.19)) # Clean up data by removing missing 'Sex' values # and log10() transform df_sex <- filter(data, !is.na(Sex)) |> log10()  # Generate PDF plot for analyte of interest plotPDFbyGroup(df_sex, apt = \"seq.8468.19\", group.var = Sex) list_seq <- list(seq.17138.8 = data$seq.17138.8,                  seq.11164.7 = data$seq.11164.7,                  seq.11168.3 = data$seq.11168.3)  plotPDFlist(lapply(list_seq, log10), fill = TRUE)"},{"path":"https://somalogic.github.io/SomaPlotr/articles/SomaPlotr.html","id":"cdf-plots","dir":"Articles","previous_headings":"CDF and PDF Plots","what":"CDF Plots","title":"Introduction to SomaPlotr","text":"Similarly, CDF plots can created suite functions serve counterparts PDF plotting functions displayed : plotCDF(), plotCDFbyGroup(), plotCDFlist(). functions implemented like PDF plotting functions, use type inputs:","code":"plotCDF(data$seq.8468.19)  plotCDFbyGroup(df_sex, apt = \"seq.8468.19\", group.var = Sex)  plotCDFlist(list_seq)"},{"path":"https://somalogic.github.io/SomaPlotr/articles/SomaPlotr.html","id":"concordance-plots","dir":"Articles","previous_headings":"","what":"Concordance Plots","title":"Introduction to SomaPlotr","text":"Plots illustrating concordance two continuous variables (e.g. RFU values SomaScan analytes) can generated plotConcord(). plots accept two numeric vectors input; one x, one y:  However, plotConcord() also accept 2-column data frame, like :","code":"x <- df_sex$seq.3045.72 y <- withr::with_seed(1, x + rnorm(length(x), sd = 0.1))  # add gaussian noise plotConcord(x, y) df_2col <- data.frame(x = x, y = y) plotConcord(df_2col)"},{"path":"https://somalogic.github.io/SomaPlotr/articles/SomaPlotr.html","id":"volcano-plots","dir":"Articles","previous_headings":"","what":"Volcano Plots","title":"Introduction to SomaPlotr","text":"Volcano plots comparing p-value vs. fold change can generated using plotVolcano(). plotVolcano() requires 2-column data frame fold change values p-values input. data types available example ADAT, simulated : data frame can now used input plotVolcano():  labels= identify= arguments can used label points:  large numbers samples, labeling points can quickly become clutterded difficult interpret. interactive HTML-based volcano plot can created explore fold change p-values individual point using plotVolcanoHTML(). function can use input data plotVolcano(), uses plotly hood generate hovering menu can used interactively investigate point:","code":"withr::with_seed(101, {   fc1 <- sort(runif(500, -2.5, 0))   # Z-scores as fc   fc2 <- sort(runif(500, 0, 2.5))    # Z-scores as fc   p1  <- pnorm(fc1)   p2  <- pnorm(fc2, lower.tail = FALSE)   p   <- jitter(c(p1, p2), amount = 0.1)   p[p < 0] <- runif(sum(p < 0), 1e-05, 1e-02)   # floor p < 0 after jitter   fc_df <- data.frame(fc = c(fc1, fc2), p = p) }) # Adding a lower p-value cutoff plotVolcano(fc_df, fc, p, cutoff = 0.1) # add some random labels to `df` fc_df <- dplyr::mutate(fc_df, pt_label = dplyr::row_number()) plotVolcano(   fc_df,   fc,   p,   cutoff = 0.01,   labels = pt_label,   identify = TRUE ) plotVolcanoHTML(fc_df, p.vec = p, FC = fc)"},{"path":"https://somalogic.github.io/SomaPlotr/articles/SomaPlotr.html","id":"boxplots","dir":"Articles","previous_headings":"","what":"Boxplots","title":"Introduction to SomaPlotr","text":"boxplotGrouped() function can used plot response variable (y) split specified grouping variable(s); 2 may used. , boxplots generated single grouping variable, Sex.  One additional grouping variable can added, desired. example, PlateId used second variable split data Plate Sex investigate possible plate bias gender:  Boxplots “beeswarm”-style points can created boxplotBeeswarm(). Note boxes plot correspond columns data frame, groups within categorical metadata variable (seen boxplotGrouped()).  Notice small group low-signalling values can seen adding “beeswarm” points. represent buffer control samples investigated . Lastly, boxplotSubarray() can used visualize distribution analytes, stratified subarray, boxplot. SomaScan context, subarray refers individual sample row data.  figure , boxplot represents single sample/subarray (x-axis displays SampleId column values), boxes automatically colored sample type (via SampleType). RFU values (log10-transformed default) available analytes plotted sample.","code":"boxplotGrouped(   df_sex,             # log10-transformed soma_adat   y = \"seq.8468.19\",  # PSA target   group.var = \"Sex\",  # grouping variable   beeswarm = TRUE     # add beeswarm points ) boxplotGrouped(   df_sex,   y = \"seq.8468.19\",                # PSA target   group.var = c(\"Sex\", \"PlateId\")   # 2 splitting variables ) boxplotBeeswarm(   data.frame(seq.10056.5 = data$seq.10056.5,              seq.10021.1 = data$seq.10021.1) |> log10() ) samples <- withr::with_seed(123, sample(rownames(data), 20L)) df_subarray <- data[samples, ] boxplotSubarray(df_subarray, color.by = \"SampleType\")"},{"path":"https://somalogic.github.io/SomaPlotr/articles/SomaPlotr.html","id":"histograms","dir":"Articles","previous_headings":"","what":"Histograms","title":"Introduction to SomaPlotr","text":"SomaPlotr provides one histogram plotting function, plotDoubleHist(), allows distribution two numeric vectors overlaid easy visual comparison:","code":"withr::with_seed(123,   data.frame(     seq.1234.56 = rnorm(1000, 2, 0.3),     seq.9876.54 = rnorm(1000, 3, 0.3)   ) ) |> plotDoubleHist()"},{"path":"https://somalogic.github.io/SomaPlotr/articles/SomaPlotr.html","id":"longitudinal-data","dir":"Articles","previous_headings":"","what":"Longitudinal Data","title":"Introduction to SomaPlotr","text":"Change subjects across time can tracked using plotLongitudinal(). name suggests, function designed track RFU measurements sample groups time. plotLongitudinal() requires input data different format previously described plots. Instead, measurement must present sample type subject time point. satisfy requirement, additional data need simulated added example data set using. better emulate type longitudinal study data plotLongitudinal() designed visualize. longitudinal plot can now generated:  Lines stemming point baseline signify change analyte seq.10021.1 time, based tissue type collected sample.","code":"df_long <- withr::with_seed(123, {   samples <- sample(df_sex$SampleId, 6L) # Select a subset of samples for the fake study   data.frame(     SampleId    = rep(samples, each = 3L),     TimePoint   = rep(c(\"0 baseline\", \"12 mo\", \"24 mo\"), 6L), # Add timepoint measurements     TissueType  = rep(c(\"Whole blood\", \"Plasma\", \"White blood cells\"), each = 3L), # Specify tissue collection     seq.10021.1 = sample(df_sex$seq.10021.1, 18L)) # Sample RFU measurements for analyte of interest }) head(df_long, 10L) #>    SampleId  TimePoint        TissueType seq.10021.1 #> 1       179 0 baseline       Whole blood    2.919130 #> 2       179      12 mo       Whole blood    2.798582 #> 3       179      24 mo       Whole blood    2.949683 #> 4        17 0 baseline            Plasma    2.891983 #> 5        17      12 mo            Plasma    2.860877 #> 6        17      24 mo            Plasma    3.019532 #> 7        57 0 baseline White blood cells    2.959518 #> 8        57      12 mo White blood cells    3.123133 #> 9        57      24 mo White blood cells    2.974143 #> 10      132 0 baseline       Whole blood    2.935054 plotLongitudinal(   df_long,   y = seq.10021.1,   time = TimePoint,   id = SampleId,   color = TissueType,   summary.line = NULL   # suppress summary lines )"},{"path":"https://somalogic.github.io/SomaPlotr/articles/SomaPlotr.html","id":"color-palettes","dir":"Articles","previous_headings":"","what":"Color Palettes","title":"Introduction to SomaPlotr","text":"examples plotting themes palettes available package, see themes vignette (TODO).","code":""},{"path":"https://somalogic.github.io/SomaPlotr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"SomaPlotr proudly brought : Amanda Hiser. Author, maintainer. Caleb Scheidel. Contributor. Leigh Alexander. Contributor. Stu Field. Author, contributor. SomaLogic Operating Co., Inc.. Copyright holder, funder. 🧬","code":""},{"path":"https://somalogic.github.io/SomaPlotr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hiser , Field S (2023). SomaPlotr: Bioinformatics Graphics Visualization 'SomaScan' Data. https://somalogic.github.io/SomaPlotr/, https://somalogic.com, https://ggplot2.tidyverse.org/.","code":"@Manual{,   title = {SomaPlotr: Bioinformatics Graphics and Visualization of 'SomaScan' Data},   author = {Amanda Hiser and Stu Field},   year = {2023},   note = {https://somalogic.github.io/SomaPlotr/, https://somalogic.com, https://ggplot2.tidyverse.org/}, }"},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Bioinformatics Graphics and Visualization of SomaScan Data","text":"SomaPlotr R package contains various standardized plotting functions designed visualize SomaScan data R statistical environment. SomaPlotr based “Grammar Graphics” (Wilkinson, 2005), layered framework mapping variables aesthetics provides structure ggplot2. , SomaPlotr largely utilizes ggplot-style syntax, can easily quickly create fully labeled, colored figures SomaScan data. SomaPlotr designed generate figures well-suited exploration visualization SomaScan data. SomaPlotr therefore biased towards cumulative distribution function (CDF) plots, probability density function (PDF) plots, volcano concordance plots, grouped boxplots, . panel figure generated SomaPlotr pieced together grid patchwork package. Read learn can create types graphics using SomaPlotr.  full table visualizations can created SomaPlotr, see Usage section .","code":""},{"path":"https://somalogic.github.io/SomaPlotr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bioinformatics Graphics and Visualization of SomaScan Data","text":"SomaPlotr can installed GitHub using remotes package follows:","code":"remotes::install_github(\"SomaLogic/SomaPlotr\")"},{"path":"https://somalogic.github.io/SomaPlotr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Bioinformatics Graphics and Visualization of SomaScan Data","text":"load SomaPlotr, simply make call library(): SomaPlotr provides tools create figures commonly used visualization SomaScan data. package include comprehensive list possible graphics, contain popular exploring analyzing patterns SomaScan.","code":"library(SomaPlotr)"},{"path":"https://somalogic.github.io/SomaPlotr/index.html","id":"primary-functionality","dir":"","previous_headings":"","what":"Primary Functionality","title":"Bioinformatics Graphics and Visualization of SomaScan Data","text":"table provides high-level summary graphics can created SomaPlotr:","code":""},{"path":"https://somalogic.github.io/SomaPlotr/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Bioinformatics Graphics and Visualization of SomaScan Data","text":"plotting functions SomaPlotr require SomaScan dataset input, generate complete, labeled figure can customized modified, desired. Using SomaPlotr, previously shown boxplot comparing RFU values across groups can generated via boxplotGrouped():  Similarly, can replicate CDF plot introductory figure via plotCDF():  quantile/percentile line (red line figure ) can added existing CDF plot via addCDFquantiles():  -depth overview package full list example plots, please see package vignette: vignette(\"SomaPlotr\", package = \"SomaPlotr\").","code":"# Simulate an example dataset timepoint <- c(\"Treatment\", \"Relapse\", \"Remission\") withr::with_seed(101, {   clin_df <- data.frame(     TimePoint   = sample(timepoint, 80, replace = TRUE),     seq.1234.56 = stats::rnorm(80, mean = 12, sd = 5)   ) })  # Create grouped boxplot w/ customized title boxplotGrouped(   clin_df,   y = \"seq.1234.56\",    group.var = \"TimePoint\",    beeswarm = TRUE,    main = \"Box Plot of Sample Timepoint\" ) x <- withr::with_seed(101, rnorm(100, mean = 4)) cdf <- plotCDF(x) cdf cdf + addCDFquantiles(x, col = \"red\")"},{"path":"https://somalogic.github.io/SomaPlotr/index.html","id":"color-palettes","dir":"","previous_headings":"","what":"Color Palettes","title":"Bioinformatics Graphics and Visualization of SomaScan Data","text":"SomaPlotr provides color palettes correspond SomaLogic Operating Co., Inc. company color schemes:  palettes can incorporated figures variety ways. soma_colors soma_colors2 objects provide individual hex colors SomaLogic color scheme. objects can used transform ggplot default color palette.","code":"scales::show_col(palette_soma(n = 8)) data.frame(x = seq_along(soma_colors2), y = seq_along(soma_colors2)) |>    ggplot(aes(x = x, y = y)) +   geom_bar(stat = \"identity\", fill = soma_colors2) +   scale_x_discrete(labels = names(soma_colors2)) +   theme(axis.title.y = element_blank(),         axis.text.y = element_blank(),         axis.ticks.y = element_blank())"},{"path":"https://somalogic.github.io/SomaPlotr/index.html","id":"themes","dir":"","previous_headings":"","what":"Themes","title":"Bioinformatics Graphics and Visualization of SomaScan Data","text":"theme_soma() theme scale_color_soma() functions provide uniform plotting color scheme. using theme_soma() theme, polished, publication ready figures can generated consistent font sizes, backgrounds, legend positions, . left, p1 created default ggplot2 theme. right, p2 theme_soma() theme scale_color_soma() color scale applied.  full list available color scales themes, see ?SomaPlotr::theme_soma.","code":"p1 <- ggplot(mtcars, aes(x = hp, y = mpg, color = factor(cyl))) +   geom_point(alpha = 0.5, size = 4)  p2 <- p1 + theme_soma(base_size = 15) + scale_color_soma()  p1 + p2"},{"path":"https://somalogic.github.io/SomaPlotr/index.html","id":"mit-license","dir":"","previous_headings":"","what":"MIT LICENSE","title":"Bioinformatics Graphics and Visualization of SomaScan Data","text":"LICENSE https://choosealicense.com/licenses/mit/ https://www.tldrlegal.com/license/mit-license/ “SomaPlotr” “SomaLogic” trademarks owned SomaLogic Operating Co., Inc. license hereby granted trademarks purposes identifying origin source Software.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/pull_request_template.html","id":"overview-of-pull-request","dir":"","previous_headings":"","what":"Overview of Pull Request","title":"NA","text":"General description purpose pull request … Fixes #","code":""},{"path":"https://somalogic.github.io/SomaPlotr/pull_request_template.html","id":"main-changes","dir":"","previous_headings":"Overview of Pull Request","what":"Main changes","title":"NA","text":"bullet 1 bullet 2","code":""},{"path":"https://somalogic.github.io/SomaPlotr/pull_request_template.html","id":"change-type","dir":"","previous_headings":"Overview of Pull Request","what":"Change type","title":"NA","text":"Please check relevant box(es): New feature (API change; @amanda-hi, @stufield) Bug fix (API change -> fixes issue; @amanda-hi, @stufield) Breaking change (fix feature API change; @amanda-hi, @stufield) Documentation update (@SLbmangum, @kmurugesan14) Package maintenance (structural, non-code, non-breaking changes; @stufield) README change (@SLbmangum, @kmurugesan14, @nmcnabbSL) LICENSE changes (@SLbmangum)","code":""},{"path":"https://somalogic.github.io/SomaPlotr/pull_request_template.html","id":"choose-reviewers","dir":"","previous_headings":"Overview of Pull Request","what":"Choose reviewer(s)","title":"NA","text":"@amanda-hi @stufield @SLbmangum @kmurugesan14 @nmcnabbSL","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/pull_request_template.html","id":"code","dir":"","previous_headings":"Overview of Pull Request","what":"Code","title":"NA","text":"appropriate, please add relevant code …","code":"head(mtcars)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/SomaPlotr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SomaPlotr: Bioinformatics Graphics and Visualization of 'SomaScan' Data — SomaPlotr-package","title":"SomaPlotr: Bioinformatics Graphics and Visualization of 'SomaScan' Data — SomaPlotr-package","text":"highly specialized suite standardized plotting routines based \"Grammar Graphics\" framework mapping variables aesthetics used 'ggplot2'. Graphics types biased towards visualizing SomaScan (proteomic) data.","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/SomaPlotr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SomaPlotr: Bioinformatics Graphics and Visualization of 'SomaScan' Data — SomaPlotr-package","text":"Maintainer: Amanda Hiser ahiser@somalogic.com Authors: Stu Field stu.g.field@gmail.com (ORCID) [contributor] contributors: Caleb Scheidel cscheidel@somalogic.com [contributor] Leigh Alexander lalexander@somalogic.com [contributor] SomaLogic Operating Co., Inc. [copyright holder, funder]","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/addCDFquantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Quantile Lines to CDF Plot — addCDFquantiles","title":"Add Quantile Lines to CDF Plot — addCDFquantiles","text":"Add quantile/percentile lines existing ggplot cumulative distribution function, typically one created using plotCDF().","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/addCDFquantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Quantile Lines to CDF Plot — addCDFquantiles","text":"","code":"addCDFquantiles(x, p = 0.5, col, lty = \"dashed\")"},{"path":"https://somalogic.github.io/SomaPlotr/reference/addCDFquantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Quantile Lines to CDF Plot — addCDFquantiles","text":"x Numeric. vector data corresponding data used create CDF. p Numeric. Value(s) 0-1 quantiles. Can length > 1 one quantile desired. col Color lines/quantiles added; must length p. lty Character. line type added quantile lines. Can single value line type desired quantiles. Can vector (length p) different line types desired quantile.","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/addCDFquantiles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add Quantile Lines to CDF Plot — addCDFquantiles","text":"Stu Field, Amanda Hiser","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/addCDFquantiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Quantile Lines to CDF Plot — addCDFquantiles","text":"","code":"rdat <- withr::with_seed(101, rnorm(100)) plt <- plotCDF(rdat, main = \"Random Gaussian\", x.lab = \"Data\") plt + addCDFquantiles(rdat, p = 0.9, col = soma_colors2$blue)   # Multiple quantiles can be added in one call if a vector is # provided for both 'p' and 'col' (and optionally 'lty') plt +   addCDFquantiles(rdat,                   p   = c(0.9, 0.5),                   col = c(soma_colors2$blue, soma_colors2$teal))   # The same effect can be achieved by adding each quantile individually plt + addCDFquantiles(rdat, p = 0.9, col = soma_colors2$blue) +   addCDFquantiles(rdat, p = 0.5, col = soma_colors2$teal) +   addCDFquantiles(rdat, p = 0.25, col = soma_colors2$pink)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotBeeswarm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ","title":"Create a ","text":"Plot series boxplots \"beeswarm\"-style points added boxes.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotBeeswarm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ","text":"","code":"boxplotBeeswarm(   .data,   notch = TRUE,   label = \"Group\",   main = NULL,   y.lab = \"value\",   x.lab = label,   cols,   pt.size = 2.5,   pt.color = \"black\",   pt.shape = 21,   ... )"},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotBeeswarm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ","text":".data Either data.frame/tbl_df object column numeric vector containing values box, named list object can converted one. notch notches drawn boxplots. label Character. label grouping variable, .e. columns data frame represent. main Character. Main title plot. See ggtitle() ggplot2 style graphics. y.lab Character. Optional string y-axis. Otherwise one automatically generated (default). x.lab Character. Optional string x-axis. Otherwise one automatically generated (default). cols Character. vector colors groups/boxes. plotDoubleHist(), must length = 2. pt.size Numeric. size points. See geom_point(). pt.color Character. fill color points. See geom_point(). pt.shape Numeric Character. Recognized pch shapes points. Recall pch = 21 - 25 \"fill-able\". point characters take color pt.color. See geom_point(). ... Additional arguments passed geom_boxplot().","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotBeeswarm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ","text":"Boxplot \"beeswarm\" style points.","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotBeeswarm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a ","text":"Stu Field","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotBeeswarm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a ","text":"","code":"df <- lapply(setNames(LETTERS[1:5], letters[1:5]), \\(x) rnorm(10, 10, 3)) |>   data.frame() |>   dplyr::select(d, dplyr::everything())   # move `d` to the front df #>            d         a         b         c         e #> 1  13.657065  7.319927  8.996052 17.119902  7.221514 #> 2  10.762096 14.329459 14.024887 11.590732 10.029998 #> 3  10.541231  9.857683  3.278086 11.437333 17.525729 #> 4   7.543103  4.483003  3.594903 11.091165 16.404034 #> 5  12.184638 13.866187 12.385506 15.329058 14.254126 #> 6  12.854697 11.953407 11.738189 12.634162 12.752626 #> 7   7.000105  6.687651 11.151539 12.917188  9.650363 #> 8  10.316361  9.308047  7.767429  7.051216  5.819880 #> 9   8.835667  9.639459  7.184884 15.822352 10.246351 #> 10 11.680840  7.287818 10.892188 11.898167  7.841383  df |> boxplotBeeswarm(main = \"Title\") #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`?  df |> boxplotBeeswarm(pt.color = \"cyan\") #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`?  df |> boxplotBeeswarm(cols = \"grey\")     # all boxes 1 color #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`?  df |> boxplotBeeswarm(label = \"Disease Level\", y.lab = \"Y\", notch = FALSE)   # Non-fill-able `pt.shape` df |> boxplotBeeswarm(pt.shape = 13) #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`?   # shapes 21 -> 25 are `fill-capable` df |> boxplotBeeswarm(cols = rep(\"blue\", ncol(df)), pt.size = 5,                        pt.shape = 23, pt.color = \"red\") #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`? #> Notch went outside hinges #> ℹ Do you want `notch = FALSE`?"},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotGrouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Grouped Boxplots by Factor(s) — boxplotGrouped","title":"Grouped Boxplots by Factor(s) — boxplotGrouped","text":"Generate boxplots response variable one two factor variables.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotGrouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grouped Boxplots by Factor(s) — boxplotGrouped","text":"","code":"boxplotGrouped(   .data,   y,   group.var,   notch = FALSE,   y.lab = NULL,   x.lab = NULL,   beeswarm = FALSE,   main = NULL,   pt.shape = 21,   pt.size = 2.5 )"},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotGrouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grouped Boxplots by Factor(s) — boxplotGrouped","text":".data Either data.frame/tbl_df object column numeric vector containing values box, named list object can converted one. y Character. response variable y axis. group.var Character. String length 1 2 representing names grouping variable(s). Variables must either factor character class vectors. notch notches drawn boxplots. y.lab Character. Optional string y-axis. Otherwise one automatically generated (default). x.lab Character. Optional string x-axis. Otherwise one automatically generated (default). beeswarm Logical. Add points overlay top boxplots? main Character. Main title plot. See ggtitle() ggplot2 style graphics. pt.shape Numeric Character. Recognized pch shapes points. Recall pch = 21 - 25 \"fill-able\". point characters take color pt.color. See geom_point(). pt.size Numeric. size points. See geom_point().","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotGrouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grouped Boxplots by Factor(s) — boxplotGrouped","text":"series boxplots grouped group.var(s).","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotGrouped.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Grouped Boxplots by Factor(s) — boxplotGrouped","text":"Stu Field","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotGrouped.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grouped Boxplots by Factor(s) — boxplotGrouped","text":"","code":"size <- c(\"small\", \"medium\", \"large\") time <- c(\"baseline\", \"6 months\", \"12 months\", \"24 months\") df <- data.frame(   Sample      = sample(size, 40, replace = TRUE),   TimePoint   = rep(time, each = 10),   seq.1234.56 = stats::rnorm(40, mean = 25, sd = 3.5) )  # factor levels determine group order df$Sample    <- factor(df$Sample, levels = size) df$TimePoint <- factor(df$TimePoint, levels = time)  # single factor boxplotGrouped(df, y = \"seq.1234.56\", group.var = \"Sample\")   # double factor boxplotGrouped(df, y = \"seq.1234.56\", group.var = c(\"Sample\", \"TimePoint\"))   # with \"beeswarm\" points boxplotGrouped(df, y = \"seq.1234.56\", group.var = \"TimePoint\", beeswarm = TRUE)  boxplotGrouped(df, y = \"seq.1234.56\", group.var = c(\"Sample\", \"TimePoint\"),                beeswarm = TRUE)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotSubarray.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Boxplots by Subarray (sample) — boxplotSubarray","title":"Plot Boxplots by Subarray (sample) — boxplotSubarray","text":"Plots distribution analytes stratified subarray boxplot. SomaScan (soma_adat) data format, subarray typically row sample data.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotSubarray.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Boxplots by Subarray (sample) — boxplotSubarray","text":"","code":"boxplotSubarray(   .data,   color.by = NULL,   labels = \"SampleId\",   y.lim = NULL,   do.log = TRUE,   apts = NULL )"},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotSubarray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Boxplots by Subarray (sample) — boxplotSubarray","text":".data soma_data data frame object created via call read_adat(). color.column name color subarrays . Typically meta data field adat SlideId. labels Character. column name adat used label box. y.lim Numeric. Length 2. upper- lower-quantiles total data used determine y-axis limits plot. NULL, points shown. .log Logical. data log10-transformed? apts optional subset analytes (AptNames) add top subarray boxplot.","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotSubarray.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Boxplots by Subarray (sample) — boxplotSubarray","text":"Stu Field","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/boxplotSubarray.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Boxplots by Subarray (sample) — boxplotSubarray","text":"","code":"data <- SomaDataIO::example_data  # Randomly select a small subset of samples s_rn <- withr::with_seed(101, sample(rownames(data), 30L)) data <- data[s_rn, ] boxplotSubarray(data)   # Color by `SampleType` variable boxplotSubarray(data, color.by = \"SampleType\")   # Find the feature names of the corresponding hyb controls hybs <- SomaDataIO::getAnalyteInfo(data) |>   dplyr::filter(grepl(\"^Hybridization\", Type)) |>   dplyr::pull(AptName)  # Pass hyb controls to `apts` arg; plots the points in boxes/whiskers boxplotSubarray(data, color.by = \"SampleType\", apts = hybs)   # Zoom to (20, 80) quantiles boxplotSubarray(data, color.by = \"SampleType\", y.lim = c(0.2, 0.8))"},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcFoldchangeMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Fold-Change Matrix — calcFoldchangeMatrix","title":"Calculate Fold-Change Matrix — calcFoldchangeMatrix","text":"Calculate column-wise fold-change matrix ADAT. clustering method \"OLO\" (Optimal-leaf-ordering) produces optimal leaf ordering respect minimizing sum distances along (Hamiltonian) path connecting leaves given order. time complexity algorithm O(n^3). Note non-finite distance values allowed.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcFoldchangeMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Fold-Change Matrix — calcFoldchangeMatrix","text":"","code":"calcFoldchangeMatrix(   data,   anno_tbl = NULL,   apt.order = c(NA, \"dilution\", \"cluster\"),   sample.order = NULL,   max = 3,   threshold = NULL )  # S3 method for foldchange_matrix print(x, ...)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcFoldchangeMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Fold-Change Matrix — calcFoldchangeMatrix","text":"data soma_adat object containing RFU feature data. anno_tbl annotations table produced via getAnalyteInfo(). Used calculate analyte dilutions matrix column ordering. NULL, table generated internally data (possible), analytes plotted dilution order. apt.order Character. columns (features) ordered. dilution mix, clustered, data object? sample.order Either character string indicating column name entries used order data frame rows, numeric vector representing order data frame rows. default (NULL) leaves row ordering data. max Max value range evaluate. Defaults 3 typically good RFU data. threshold threshold fold-change values. Values less threshold set zero. Threshold must less \"max\". x object class \"foldchange_matrix\". ... Arguments S3 print methods.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcFoldchangeMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Fold-Change Matrix — calcFoldchangeMatrix","text":"list class c(\"foldchange_matrix\", \"Map\") containing: matrix matrix containing protein fold-change values sample. x.lab character string containing plot x-axis label. title character string containing plot title. sample.order numeric vector representing order data frame rows. legend.sub character string containing plot legend subtitle.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcFoldchangeMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Fold-Change Matrix — calcFoldchangeMatrix","text":"S3 plotting method, see plot.Map().","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcFoldchangeMatrix.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Calculate Fold-Change Matrix — calcFoldchangeMatrix","text":"print(foldchange_matrix): S3 print method \"foldchange_matrix\".","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcFoldchangeMatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Fold-Change Matrix — calcFoldchangeMatrix","text":"Stu Field","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcFoldchangeMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Fold-Change Matrix — calcFoldchangeMatrix","text":"","code":"sample.adat <- SomaDataIO::example_data fc <- calcFoldchangeMatrix(sample.adat) class(fc) #> [1] \"foldchange_matrix\" \"Map\"               \"list\"               # S3 print method fc #> ══ SomaLogic Fold-Change Matrix ══════════════════════════════════════════ #>   Fold-change matrix dim    '192 x 5284' #>   Title                     'Fold-Change Matrix: log2(x / median(x))' #>   x-label                   'Proteins Ordered in Adat' #>   Sample Order              1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192 #>   Class Table               NA #>   Legend Sub-title          'Proteins' #> ══════════════════════════════════════════════════════════════════════════  # Sample Order # specified by user fc <- calcFoldchangeMatrix(sample.adat, sample.order = 192:1)  # by row indices fc$sample.order #>   [1] 192 191 190 189 188 187 186 185 184 183 182 181 180 179 178 177 176 #>  [18] 175 174 173 172 171 170 169 168 167 166 165 164 163 162 161 160 159 #>  [35] 158 157 156 155 154 153 152 151 150 149 148 147 146 145 144 143 142 #>  [52] 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 #>  [69] 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 #>  [86] 107 106 105 104 103 102 101 100  99  98  97  96  95  94  93  92  91 #> [103]  90  89  88  87  86  85  84  83  82  81  80  79  78  77  76  75  74 #> [120]  73  72  71  70  69  68  67  66  65  64  63  62  61  60  59  58  57 #> [137]  56  55  54  53  52  51  50  49  48  47  46  45  44  43  42  41  40 #> [154]  39  38  37  36  35  34  33  32  31  30  29  28  27  26  25  24  23 #> [171]  22  21  20  19  18  17  16  15  14  13  12  11  10   9   8   7   6 #> [188]   5   4   3   2   1  # specified by field fc <- calcFoldchangeMatrix(sample.adat, sample.order = \"Sex\") fc$sample.order #>   [1]   1   2   5   6   8   9  11  15  17  19  20  24  25  31  32  33  34 #>  [18]  35  39  42  44  46  49  51  53  54  55  58  60  61  65  68  71  74 #>  [35]  76  77  79  80  86  89  91  93  94  96  97 101 102 106 107 113 115 #>  [52] 117 119 121 125 127 133 134 136 139 141 142 144 148 149 152 154 160 #>  [69] 161 162 164 165 166 174 176 177 178 179 182 183 186 187 188 189 192 #>  [86]   3   4   7  12  14  18  21  22  23  26  27  28  29  30  37  38  40 #> [103]  41  45  48  52  56  57  59  62  63  64  66  67  70  72  73  75  81 #> [120]  82  83  84  85  88  90  95  99 100 103 104 105 108 109 110 111 112 #> [137] 116 118 120 122 123 124 126 128 129 131 132 135 137 138 145 146 147 #> [154] 150 155 156 157 158 163 167 168 169 170 171 172 175 184 185 190 191 #> [171]  10  13  16  36  43  47  50  69  78  87  92  98 114 130 140 143 151 #> [188] 153 159 173 180 181  # specified by 2 fields in ADAT fc <- calcFoldchangeMatrix(sample.adat,                            sample.order = c(\"Sex\", \"TimePoint\")) fc$sample.order #>   [1]   1   2   5   6   8   9  11  15  17  19  20  24  25  31  32  33  34 #>  [18]  35  39  42  44  46  49  51  53  54  55  58  60  61  65  68  71  74 #>  [35]  76  77  79  80  86  89  91  93  94  96  97 101 102 106 107 113 115 #>  [52] 117 119 121 125 127 133 134 136 139 141 142 144 148 149 152 154 160 #>  [69] 161 162 164 165 166 174 176 177 178 179 182 183 186 187 188 189 192 #>  [86]   3   4   7  12  14  18  21  22  23  26  27  28  29  30  37  38  40 #> [103]  41  45  48  52  56  57  59  62  63  64  66  67  70  72  73  75  81 #> [120]  82  83  84  85  88  90  95  99 100 103 104 105 108 109 110 111 112 #> [137] 116 118 120 122 123 124 126 128 129 131 132 135 137 138 145 146 147 #> [154] 150 155 156 157 158 163 167 168 169 170 171 172 175 184 185 190 191 #> [171]  10  13  16  36  43  47  50  69  78  87  92  98 114 130 140 143 151 #> [188] 153 159 173 180 181"},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcMissingnessMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Missingness of Clinical Meta Data — calcMissingnessMap","title":"Calculate Missingness of Clinical Meta Data — calcMissingnessMap","text":"Calculate \"missingness\" (NAs) clinical meta data ADAT. S3 plotting method, see plot.Map().","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcMissingnessMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Missingness of Clinical Meta Data — calcMissingnessMap","text":"","code":"calcMissingnessMap(data, include.pattern = \".\", exclude.pattern = NULL)  # S3 method for missingness_map print(x, ...)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcMissingnessMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Missingness of Clinical Meta Data — calcMissingnessMap","text":"data data frame (soma_adat) meta data columns (.e. analytes). include.pattern Character (optional). regular expression string used grep() call include matching column names. Defaults include column names meta data (\".\"). exclude.pattern Character (optional). regular expression string used grep() call exclude matching column names. x object class \"missingness_map\". ... Arguments S3 print methods.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcMissingnessMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Missingness of Clinical Meta Data — calcMissingnessMap","text":"list class c(\"missingness_map\", \"Map\") containing: matrix boolean matrix TRUE/FALSE whether sample missingness according stated criteria. names character vector containing names meta data columns. rows..freq logical indicating samples ordered missingness frequency. Currently always FALSE. legend.sub character string containing plot legend subtitle. title character string containing plot title. x.lab character string containing plot x-axis label.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcMissingnessMap.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Calculate Missingness of Clinical Meta Data — calcMissingnessMap","text":"print(missingness_map): S3 print method \"missingness_map\".","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcMissingnessMap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Missingness of Clinical Meta Data — calcMissingnessMap","text":"Stu Field","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcMissingnessMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Missingness of Clinical Meta Data — calcMissingnessMap","text":"","code":"sample.adat <- SomaDataIO::example_data meta <- sample.adat[, SomaDataIO::getMeta(sample.adat)]  # random assign NAs cols <- rep(1:ncol(meta), each = 3) rows <- as.integer(replicate(ncol(meta), sample(1:nrow(meta), 3))) meta[cbind(rows, cols)] <- NA  mm <- calcMissingnessMap(meta) class(mm) #> [1] \"missingness_map\" \"Map\"             \"list\"             # S3 print method mm #> ══ SomaLogic Missingness Map ═════════════════════════════════════════════ #>   Missingness Map dim       '192 x 34' #>   Title                     'Meta Data Missingness Map' #>   Class Table               NA #>   Legend Sub-title          'MetaData' #> ══════════════════════════════════════════════════════════════════════════"},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcOutlierMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate MAD Outlier Map — calcOutlierMap","title":"Calculate MAD Outlier Map — calcOutlierMap","text":"Calculate median absolute deviation (statistical) outliers measurements fold-change criteria ADAT. Two values required calculation: median absolute deviation (MAD) fold-change (FC). Outliers determined based result 6*MAD x*FC , x number fold changes defined.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcOutlierMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate MAD Outlier Map — calcOutlierMap","text":"","code":"calcOutlierMap(   data,   anno_tbl = NULL,   apt.order = c(NA, \"dilution\", \"signal\"),   sample.order = NULL,   fc.crit = 5 )  # S3 method for outlier_map print(x, ...)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcOutlierMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate MAD Outlier Map — calcOutlierMap","text":"data soma_adat object containing RFU feature data. anno_tbl annotations table produced via getAnalyteInfo(). Used calculate analyte dilutions matrix column ordering. NULL, table generated internally data (possible), analytes plotted dilution order. apt.order Character. columns/features ordered? Options include: dilution mix (\"dilution\"), median overall signal (\"signal\"), -data (default). sample.order Either character string indicating column name entries used order data frame rows, numeric vector representing order data frame rows. default (NULL) leaves row ordering data. fc.crit Integer. fold change criterion evaluate. Defaults 5x. x object class \"outlier_map\". ... Arguments S3 print methods.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcOutlierMap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate MAD Outlier Map — calcOutlierMap","text":"list class c(\"outlier_map\", \"Map\") containing: matrix boolean matrix TRUE/FALSE whether sample outlier according stated criteria. x.lab character string containing plot x-axis label. title character string containing plot title. rows..freq logical indicating samples ordered outlier frequency. class.tab table containing frequencies class input sample.order defined categorical variable. sample.order numeric vector representing order data frame rows. legend.sub character string containing plot legend subtitle.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcOutlierMap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate MAD Outlier Map — calcOutlierMap","text":"S3 plotting method, see plot.Map().","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcOutlierMap.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Calculate MAD Outlier Map — calcOutlierMap","text":"print(outlier_map): S3 print method class \"outlier_map\".","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcOutlierMap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate MAD Outlier Map — calcOutlierMap","text":"Stu Field","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/calcOutlierMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate MAD Outlier Map — calcOutlierMap","text":"","code":"sample.adat <- SomaDataIO::example_data om <- calcOutlierMap(sample.adat) class(om) #> [1] \"outlier_map\" \"Map\"         \"list\"         # S3 print method om #> ══ SomaLogic Outlier Map ═════════════════════════════════════════════════ #>   Outlier Map dimensions    '192 x 5284' #>   Title                     'Outlier Map: | x - median(x) | > 6 ● mad(x) & FC > 5x' #>   Class Table               NA #>   Rows by Frequency         FALSE #>   Sample Order              'Proteins Ordered in Adat' #>   x-label                   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192 #>   Legend Sub-title          'Proteins' #> ══════════════════════════════════════════════════════════════════════════  # `sample.order = \"frequency\"` orders samples by outlier frequency om <- calcOutlierMap(sample.adat, sample.order = \"frequency\") om$rows.by.freq #> [1] TRUE om$sample.order #>   [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17 #>  [18]  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34 #>  [35]  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51 #>  [52]  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68 #>  [69]  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85 #>  [86]  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 #> [103] 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 #> [120] 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 #> [137] 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 #> [154] 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 #> [171] 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 #> [188] 188 189 190 191 192  # order samples by user specified indices om <- calcOutlierMap(sample.adat, sample.order = 192:1) om$sample.order #>   [1] 192 191 190 189 188 187 186 185 184 183 182 181 180 179 178 177 176 #>  [18] 175 174 173 172 171 170 169 168 167 166 165 164 163 162 161 160 159 #>  [35] 158 157 156 155 154 153 152 151 150 149 148 147 146 145 144 143 142 #>  [52] 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 #>  [69] 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 #>  [86] 107 106 105 104 103 102 101 100  99  98  97  96  95  94  93  92  91 #> [103]  90  89  88  87  86  85  84  83  82  81  80  79  78  77  76  75  74 #> [120]  73  72  71  70  69  68  67  66  65  64  63  62  61  60  59  58  57 #> [137]  56  55  54  53  52  51  50  49  48  47  46  45  44  43  42  41  40 #> [154]  39  38  37  36  35  34  33  32  31  30  29  28  27  26  25  24  23 #> [171]  22  21  20  19  18  17  16  15  14  13  12  11  10   9   8   7   6 #> [188]   5   4   3   2   1  # order samples field in Adat om <- calcOutlierMap(sample.adat, sample.order = \"Sex\") om$sample.order #>   [1]   1   2   5   6   8   9  11  15  17  19  20  24  25  31  32  33  34 #>  [18]  35  39  42  44  46  49  51  53  54  55  58  60  61  65  68  71  74 #>  [35]  76  77  79  80  86  89  91  93  94  96  97 101 102 106 107 113 115 #>  [52] 117 119 121 125 127 133 134 136 139 141 142 144 148 149 152 154 160 #>  [69] 161 162 164 165 166 174 176 177 178 179 182 183 186 187 188 189 192 #>  [86]   3   4   7  12  14  18  21  22  23  26  27  28  29  30  37  38  40 #> [103]  41  45  48  52  56  57  59  62  63  64  66  67  70  72  73  75  81 #> [120]  82  83  84  85  88  90  95  99 100 103 104 105 108 109 110 111 112 #> [137] 116 118 120 122 123 124 126 128 129 131 132 135 137 138 145 146 147 #> [154] 150 155 156 157 158 163 167 168 169 170 171 172 175 184 185 190 191 #> [171]  10  13  16  36  43  47  50  69  78  87  92  98 114 130 140 143 151 #> [188] 153 159 173 180 181"},{"path":"https://somalogic.github.io/SomaPlotr/reference/figure.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves a Figure (Plot) to File — figure","title":"Saves a Figure (Plot) to File — figure","text":"wrapper png(), pdf(), jpeg() save plots disk. file path passed figure(), opens plotting device based file extension, passing file name close_figure(). file = NULL, output directed default plotting device.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/figure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves a Figure (Plot) to File — figure","text":"","code":"figure(file, height = 480, width = 480, scale = 1, ...)  close_figure(file)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/figure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saves a Figure (Plot) to File — figure","text":"file Character. path output file passed png(), pdf(), jpeg(). Plot type determined file extension. height Double. height plot pixels. width Double. width plot pixels. scale re-scaling output resize window better. ... Additional arguments passed png(), pdf(), jpeg().","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/figure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Saves a Figure (Plot) to File — figure","text":"file argument, invisibly.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/figure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Saves a Figure (Plot) to File — figure","text":"figure() close_figure() functions useful used inside another function creates plot. adding file = pass-argument function creates plot, user can toggle plotting file graphics device. Supported plotting devices: png() pdf() jpeg() postscript() (*.eps)","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/figure.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Saves a Figure (Plot) to File — figure","text":"close_figure(): Closes currently active plotting device dev.() call file name passed. file = NULL, nothing happens. function typically used conjunction figure() inside enclosing function. See example.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/figure.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Saves a Figure (Plot) to File — figure","text":"fontsize plots constant. like increase font size relative plot, can decrease plot size. Alternatively, can pass pointsize additional argument.","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/figure.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Saves a Figure (Plot) to File — figure","text":"Stu Field","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/figure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Saves a Figure (Plot) to File — figure","text":"","code":"# Create enclosing plotting function createPlot <- function(file = NULL) {   figure(file = file)   on.exit(close_figure(file = file))   plot_data <- withr::with_seed(1, matrix(rnorm(30), ncol = 2))   plot(as.data.frame(plot_data), col = unlist(soma_colors), pch = 19, cex = 2) }  # default; no file saved createPlot()   if ( interactive() ) {   # Save as *.pdf   createPlot(\"example.pdf\")    # Save as *.png   createPlot(\"example.png\") }"},{"path":"https://somalogic.github.io/SomaPlotr/reference/getFlaggedIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Flagged Ids From MAD Outlier or Missingness Maps — getFlaggedIds","title":"Get Flagged Ids From MAD Outlier or Missingness Maps — getFlaggedIds","text":"Return IDs flagged samples objects outlier_map missingness_map classes. Samples flagged based percent analytes (RFU columns) given sample identified outliers using median absolute deviation (MAD), percent \"missingness\" (NAs) clinical meta data ADAT.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/getFlaggedIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Flagged Ids From MAD Outlier or Missingness Maps — getFlaggedIds","text":"","code":"getFlaggedIds(x, flags = 0.05, data = NULL, include = NULL)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/getFlaggedIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Flagged Ids From MAD Outlier or Missingness Maps — getFlaggedIds","text":"x object class: outlier_map - calcOutlierMap() missingness_map - calcMissingnessMap() flags Numeric [0, 1]. \"outlier_map\", proportion analytes (columns) given sample must outliers flag placed right-axis, thus flagging sample. \"missingness_map\" class, percent \"missingness\" (NAs) clinical meta data. NULL (default), 0.05 (5%) selected. data Optional. data originally used create map x. omitted, single column data frame returned. include Optional. Character vector column name(s) data include resulting data frame. Ignored data = NULL.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/getFlaggedIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Flagged Ids From MAD Outlier or Missingness Maps — getFlaggedIds","text":"data.frame indices (idx) flagged samples, along additional variables specified include.","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/getFlaggedIds.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Flagged Ids From MAD Outlier or Missingness Maps — getFlaggedIds","text":"Caleb Scheidel","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/getFlaggedIds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Flagged Ids From MAD Outlier or Missingness Maps — getFlaggedIds","text":"","code":"# flagged outliers # create a single sample outlier (12) out_adat <- SomaDataIO::example_data apts     <- SomaDataIO::getAnalytes(out_adat) out_adat[12, apts] <- out_adat[12, apts] * 10  om <- calcOutlierMap(out_adat) getFlaggedIds(om, out_adat, flags = 0.05, include = c(\"Sex\", \"Subarray\")) #>   idx  Sex Subarray #> 1  12    M        5 #> 2  13 <NA>        4 #> 3  43 <NA>        8 #> 4  87 <NA>        6 #> 5 143 <NA>        4 #> 6 151 <NA>        4 #> 7 173 <NA>        4  # flagged missingness sample.adat <- SomaDataIO::example_data nc   <- SomaDataIO::getMeta(sample.adat, n = TRUE) meta <- sample.adat[, SomaDataIO::getMeta(sample.adat)]  # random assign NAs to df b/c currently none missing cols <- rep(1:nc, each = 3L) rows <- withr::with_seed(1, as.integer(replicate(nc, sample(1:nrow(meta), 3)))) meta[cbind(rows, cols)] <- NA  mm <- calcMissingnessMap(meta) getFlaggedIds(mm, meta, flags = 0.2) #>     idx #> 1     1 #> 2     2 #> 3     3 #> 4     4 #> 5     5 #> 6     6 #> 7     7 #> 8     8 #> 9     9 #> 10   10 #> 11   11 #> 12   12 #> 13   13 #> 14   14 #> 15   15 #> 16   16 #> 17   17 #> 18   18 #> 19   19 #> 20   20 #> 21   21 #> 22   22 #> 23   23 #> 24   24 #> 25   25 #> 26   26 #> 27   27 #> 28   28 #> 29   29 #> 30   30 #> 31   31 #> 32   32 #> 33   33 #> 34   34 #> 35   35 #> 36   36 #> 37   37 #> 38   38 #> 39   39 #> 40   40 #> 41   41 #> 42   42 #> 43   43 #> 44   44 #> 45   45 #> 46   46 #> 47   47 #> 48   48 #> 49   49 #> 50   50 #> 51   51 #> 52   52 #> 53   53 #> 54   54 #> 55   55 #> 56   56 #> 57   57 #> 58   58 #> 59   59 #> 60   60 #> 61   61 #> 62   62 #> 63   63 #> 64   64 #> 65   65 #> 66   66 #> 67   67 #> 68   68 #> 69   69 #> 70   70 #> 71   71 #> 72   72 #> 73   73 #> 74   74 #> 75   75 #> 76   76 #> 77   77 #> 78   78 #> 79   79 #> 80   80 #> 81   81 #> 82   82 #> 83   83 #> 84   84 #> 85   85 #> 86   86 #> 87   87 #> 88   88 #> 89   89 #> 90   90 #> 91   91 #> 92   92 #> 93   93 #> 94   94 #> 95   95 #> 96   96 #> 97   97 #> 98   98 #> 99   99 #> 100 100 #> 101 101 #> 102 102 #> 103 103 #> 104 104 #> 105 105 #> 106 106 #> 107 107 #> 108 108 #> 109 109 #> 110 110 #> 111 111 #> 112 112 #> 113 113 #> 114 114 #> 115 115 #> 116 116 #> 117 117 #> 118 118 #> 119 119 #> 120 120 #> 121 121 #> 122 122 #> 123 123 #> 124 124 #> 125 125 #> 126 126 #> 127 127 #> 128 128 #> 129 129 #> 130 130 #> 131 131 #> 132 132 #> 133 133 #> 134 134 #> 135 135 #> 136 136 #> 137 137 #> 138 138 #> 139 139 #> 140 140 #> 141 141 #> 142 142 #> 143 143 #> 144 144 #> 145 145 #> 146 146 #> 147 147 #> 148 148 #> 149 149 #> 150 150 #> 151 151 #> 152 152 #> 153 153 #> 154 154 #> 155 155 #> 156 156 #> 157 157 #> 158 158 #> 159 159 #> 160 160 #> 161 161 #> 162 162 #> 163 163 #> 164 164 #> 165 165 #> 166 166 #> 167 167 #> 168 168 #> 169 169 #> 170 170 #> 171 171 #> 172 172 #> 173 173 #> 174 174 #> 175 175 #> 176 176 #> 177 177 #> 178 178 #> 179 179 #> 180 180 #> 181 181 #> 182 182 #> 183 183 #> 184 184 #> 185 185 #> 186 186 #> 187 187 #> 188 188 #> 189 189 #> 190 190 #> 191 191 #> 192 192"},{"path":"https://somalogic.github.io/SomaPlotr/reference/objects.html","id":null,"dir":"Reference","previous_headings":"","what":"SomaPlotr Colors and Graphics — objects","title":"SomaPlotr Colors and Graphics — objects","text":"package contains numerous color palettes, themes, base ggplot2 graphics objects used coordinate display consistent visual graphics presentation. cases color palettes determined SomaLogic Commercial Marketing teams. ggplot2 objects intended used palette theme testing. See description object .","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SomaPlotr Colors and Graphics — objects","text":"","code":"soma_colors2  soma_colors  soma_colors_risk  soma_colors_greys  soma_blue  soma_purple  col_string  gg"},{"path":"https://somalogic.github.io/SomaPlotr/reference/objects.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SomaPlotr Colors and Graphics — objects","text":"SomaLogic Operating Co., Inc.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/objects.html","id":"soma-colors-","dir":"Reference","previous_headings":"","what":"soma_colors2","title":"SomaPlotr Colors and Graphics — objects","text":"new official \"Soma-Colors\" 2020 re-branding. Includes new \"Soma-Blue\" plus blues, greens, yellow, pink, purple: Note following common color--group mappings:","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/objects.html","id":"soma-colors","dir":"Reference","previous_headings":"","what":"soma_colors","title":"SomaPlotr Colors and Graphics — objects","text":"former official \"Soma-Colors\", includes \"Soma-Purple\" plus green, blue, two shades grey:","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/objects.html","id":"soma-colors-risk","dir":"Reference","previous_headings":"","what":"soma_colors_risk","title":"SomaPlotr Colors and Graphics — objects","text":"official \"Soma-Risk Colors\" risk designations. Includes red, orange, yellow, green, blue:","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/objects.html","id":"soma-colors-greys","dir":"Reference","previous_headings":"","what":"soma_colors_greys","title":"SomaPlotr Colors and Graphics — objects","text":"official neutral palette grey-scale colors:","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/objects.html","id":"soma-blue","dir":"Reference","previous_headings":"","what":"soma_blue","title":"SomaPlotr Colors and Graphics — objects","text":"official \"Soma-Blue\" color.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/objects.html","id":"soma-purple","dir":"Reference","previous_headings":"","what":"soma_purple","title":"SomaPlotr Colors and Graphics — objects","text":"former official \"Soma-Purple\" color (retired 2020). Also final entry col_string.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/objects.html","id":"col-string","dir":"Reference","previous_headings":"","what":"col_string","title":"SomaPlotr Colors and Graphics — objects","text":"vector colors used (sometimes internally) various plotting routines:","code":"[1] \"dodgerblue\" [2] \"red\"     [3] \"darkgreen\" [4] \"darkorchid4\"   [5] \"cyan\"       [6] \"orange\"  [7] \"black\"     [8] \"grey\"   [9] \"#990066\"   [10] \"green\"  [11] \"#5A556E\""},{"path":"https://somalogic.github.io/SomaPlotr/reference/objects.html","id":"gg","dir":"Reference","previous_headings":"","what":"gg","title":"SomaPlotr Colors and Graphics — objects","text":"list 3 sample ggplot figures based iris data set use testing various themes, color palettes, general plotting: scatter plot bar plot boxplot","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/objects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SomaPlotr Colors and Graphics — objects","text":"","code":"barplot(rep_len(1, length(soma_colors2)), axes = FALSE,         col = unlist(soma_colors2),         names = names(soma_colors2), las = 2)   barplot(rep_len(1, length(soma_colors)), axes = FALSE,         col = unlist(soma_colors),         names = names(soma_colors), las = 2)   barplot(rep_len(1, length(soma_colors_risk)), axes = FALSE,         col = unlist(soma_colors_risk),         names = names(soma_colors_risk), las = 2)   barplot(rep_len(1, length(soma_colors_greys)), axes = FALSE,         col = unlist(soma_colors_greys),         names = names(soma_colors_greys), las = 2)   barplot(c(1, 1), col = c(soma_blue, ggplot2::alpha(soma_blue, 0.5)), axes = FALSE,         names = paste(\"soma_blue\", c(\"(alpha = 1)\", \"(alpha = 0.5)\")))   barplot(c(1, 1), col = c(soma_purple, ggplot2::alpha(soma_purple, 0.5)), axes = FALSE,         names = paste(\"soma_purple\", c(\"(alpha = 1)\", \"(alpha = 0.5)\")))   barplot(rep_len(1, length(col_string)), axes = FALSE,         col = col_string, names = col_string, las = 2)   gg$point  gg$bar  gg$box  gg$point + ggplot2::theme_dark()  gg$bar + ggplot2::theme_classic()"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plot.Map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Image Maps — plot.Map","title":"Plot Image Maps — plot.Map","text":"Plotting function objects foldchange_matrix, outlier_map, missingness_map classes. Produces heatmap-style image using ggplot2 syntax, objects produced one calcFoldchangeMatrix(), calcOutlierMap(), calcMissingnessMap().","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plot.Map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Image Maps — plot.Map","text":"","code":"# S3 method for Map plot(   x,   color.scheme = NULL,   legend.ticks = 7,   gridlines = NULL,   gridlinecol = \"red\",   gridlinelwd = 0.5,   gridlinelty = 2,   main = NULL,   y.lab = NULL,   x.lab = NULL,   type = c(\"foldchange\", \"outlier\", \"missingness\"),   flags = NULL,   legend.width = 1,   legend.height = 2,   filename = NULL,   plot.width = 14,   plot.height = 8,   plot.scale = 1,   ... )"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plot.Map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Image Maps — plot.Map","text":"x object class: foldchange_matrix outlier_map missingness_map color.scheme color scheme use. Typical choices include: gplots::redgreen() gplots::bluered() grDevices::heat.colors() grDevices::terrain.colors() grDevices::topo.colors() RColorBrewer::brewer.pal() viridis::viridis() viridis::magma() legend.ticks many ticks place color legend. gridlines Numeric vector logical. Indicates draw horizontal grid lines can used separate samples (rows). vector cumulative sum horizontal lines drawn, typically something like cumsum(table(data$Sex)). Alternatively, TRUE can passed whereby lines determined \"class.tab\" element x$class.tab (possible). gridlinecol Color gridlines. gridlinelwd Width gridlines. gridlinelty Line type gridlines. main Character. Main title plot. See ggtitle() ggplot2 style graphics. y.lab Character. Optional string y-axis. Otherwise one automatically generated (default). x.lab Character. Optional string x-axis. Otherwise one automatically generated (default). type Character. Currently one : \"foldchange\", \"outlier\", \"missingness\". argument determined object class typically passed user called via intended S3 plot method. flags Numeric [0, 1]. \"outlier_map\", proportion analytes (columns) given sample must outliers flag placed right-axis, thus flagging sample. \"missingness_map\" class, percent \"missingness\" (NAs) clinical meta data. NULL (default), 0.05 (5%) selected. legend.width Width color legend. legend.height Height color legend. filename Optional. provided, plot written file. file name must also include desired file type extension; used determine file type, e.g. file named foo.png saved PNG. See ggsave() full list file type (device) options. plot.width \"filename != NULL\", width plot image file. plot.height \"filename != NULL\", height plot image file. plot.scale \"filename != NULL\", scale plot image file. ... Arguments required plot() generic. Currently unused.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plot.Map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Image Maps — plot.Map","text":"Plot image passed matrix.","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/plot.Map.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Image Maps — plot.Map","text":"Stu Field, Amanda Hiser","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plot.Map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Image Maps — plot.Map","text":"","code":"data <- SomaDataIO::example_data  # Fold-change FC <- calcFoldchangeMatrix(data) plot(FC)   # Outlier OM <- calcOutlierMap(data) plot(OM, flags = 0.05)   # Clin Data Missingness meta <- SomaDataIO::getMeta(data) MM   <- calcMissingnessMap(data[, meta]) plot(MM, flags = 0.05)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotCDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots an Empirical CDF — plotCDF","title":"Plots an Empirical CDF — plotCDF","text":"plotCDF() creates plot empirical cumulative distribution function numeric vector continuous data. similar ecdf() visual modifications. plotCDFbyGroup() creates plot series cumulative distribution function (CDF) plots stratified/split grouping variable (usually) meta data, e.g. Response grouping. plotCDFlist() creates series cumulative distribution function (CDF) plots numeric list object.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotCDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots an Empirical CDF — plotCDF","text":"","code":"plotCDF(   x,   col = soma_colors$purple,   x.lab = \"values\",   y.lab = bquote(~P(X < x)),   main = \"Empirical Cumulative Distribution Function\",   lty = \"solid\",   add.gauss = FALSE )  plotCDFbyGroup(   data,   apt,   group.var,   cols,   xlim = NULL,   x.lab = bquote(italic(log)[10] ~ (RFU)),   main = apt,   lty = \"solid\",   ablines = NULL,   include.counts = FALSE )  plotCDFlist(.data, label = \"Group\", main = \"CDF by Group\", ...)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotCDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots an Empirical CDF — plotCDF","text":"x numeric vector. col Character. String color line. x.lab Character. Optional string x-axis. Otherwise one automatically generated (default). y.lab Character. Optional string y-axis. Otherwise one automatically generated (default). main Character. Main title plot. See ggtitle() ggplot2 style graphics. lty Character. Passed geom_vline(). See ggtitle(). add.gauss Logical. Gaussian fit data plotted PDF? data soma_adat data.frame object containing RFU data. apt Character. name column data use generating CDFs. Typically aptamer measurement. group.var unquoted column name data containing group labels. cols Character. vector colors groups/boxes. plotDoubleHist(), must length = 2. xlim Numeric. Limits x-axis. See coord_cartesian(). ablines Numeric. vector x-axis position(s) vertical lines added CDF PDF. include.counts Logical. class counts added plot legend? .data named list numeric vectors (data.frame) containing data plot. label Character. label grouping variable, .e. entries list represent. ... Additional arguments passed either plotCDFbyGroup() plotPDFbyGroup(), primarily one : x.lab lty cols xlim fill ablines","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotCDF.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plots an Empirical CDF — plotCDF","text":"Stu Field","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotCDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots an Empirical CDF — plotCDF","text":"","code":"# `plotCDF()` x <- rnorm(100, mean = 5) plotCDF(x)  plotCDF(x, col = \"darkred\")  plotCDF(x, col = \"dodgerblue\", add.gauss = TRUE)   # `plotCDFbyGroup()` data  <- SomaDataIO::example_data |> dplyr::filter(SampleType == \"Sample\") anno  <- SomaDataIO::getTargetNames(SomaDataIO::getAnalyteInfo(data)) fsh   <- \"seq.3032.11\" title <- anno[[fsh]] plotCDFbyGroup(log10(data), apt = fsh, group.var = Sex, main = title)  lines <- split(log10(data[[fsh]]), data$Sex) |>   vapply(median, double(1)) plotCDFbyGroup(log10(data), apt = fsh, group.var = Sex,                ablines = lines, main = title)  plotCDFbyGroup(log10(data), apt = fsh, group.var = Sex,                include.counts = TRUE, main = title)   # `plotCDFlist()` x <- withr::with_seed(101,   list(     Group1 = rnorm(100),     Group2 = rnorm(100, sd = 0.5),     Group3 = rnorm(50, mean = 3, sd = 2)   ) ) # warning: RFU values should all be positive! plotCDFlist(x) #> Warning: Non-positive values detected ... #> If RFU data, possibly multi-logging?  plotCDFlist(x, label = \"SplitBy\") #> Warning: Non-positive values detected ... #> If RFU data, possibly multi-logging?  plotCDFlist(x, x.lab = \"My x-axis\", main = \"Variable `x` CDF\") #> Warning: Non-positive values detected ... #> If RFU data, possibly multi-logging?  medians <- vapply(x, median, 0.0) plotCDFlist(x, ablines = medians, main = \"Variable `x` CDF\") #> Warning: Non-positive values detected ... #> If RFU data, possibly multi-logging?"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotConcord.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Concordance — plotConcord","title":"Plot Concordance — plotConcord","text":"concordance plot 2 numeric vectors, passed either 2-column data.frame/tibble object separately x y. cc.type = \"ccc\", Lin's Concordance Correlation Coefficient used estimate correlation coefficient. allowed values cc.type, stats::cor.test() used.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotConcord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Concordance — plotConcord","text":"","code":"plotConcord(x, ...)  # S3 method for numeric plotConcord(x, y, ...)  # S3 method for data.frame plotConcord(   x,   x.lab = \"x\",   y.lab = \"y\",   main = NULL,   pt.col = soma_purple,   pt.size = 2,   add.rug = TRUE,   identify = FALSE,   all.labels = seq_len(nrow(x)),   spread = 1,   label.size = 3,   cc.type = c(\"ccc\", \"pearson\", \"spearman\", \"kendall\"),   ... )"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotConcord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Concordance — plotConcord","text":"x Numeric. First vector comparison (x-axis). Alternatively, x can two column data frame containing vector data compare. ... extensibility S3 methods. y Numeric. Second vector comparison (y-axis). Omitted x data.frame. x.lab Character. Optional string x-axis. Otherwise one automatically generated (default). y.lab Character. Optional string y-axis. Otherwise one automatically generated (default). main Character. Main title plot. See ggtitle() ggplot2 style graphics. pt.col Character. color used points. pt.size Numeric. point size. add.rug Logical. TRUE, axis includes ticks point. identify Logical. TRUE, points auto-identified. .labels Character. labels point identify = TRUE. points actually labeled determined spread = argument. default simply numbers points. spread Numeric. width unit line start labeling points. default (spread = 1) reasonable log10-transformed RFU data. label.size Numeric. size point labels. cc.type Character. correlation coefficient estimator use. Must one c(\"ccc\", \"pearson\", \"spearman\", \"kendall\").","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotConcord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Concordance — plotConcord","text":"concordance plot squared correlation coefficient related statistics sub-title, robust linear regression fit line, unit line, optionally labeled points.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotConcord.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot Concordance — plotConcord","text":"Lin, Lawrence -Kuei. 1989. Concordance Correlation Coefficient Evaluate Reproducibility. Biometrics. 45:255-268.","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotConcord.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Concordance — plotConcord","text":"Stu Field","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotConcord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Concordance — plotConcord","text":"","code":"x <- withr::with_seed(1234L, rnorm(500, 400, 30))  # bias plotConcord(x, x + 20)   # scale plotConcord(x, x * 1.2)   # random y <- x + withr::with_seed(2345L, rnorm(500, sd = sd(x) / 2)) plotConcord(x, y - (y * 0.02))   # using Spearman's Correlation Coefficient plotConcord(x, y - (y * 0.02), cc.type = \"spearman\")   # using Pearson's Correlation Coefficient plotConcord(x, y - (y * 0.02), cc.type = \"pearson\")   # using Kendall's Correlation Coefficient plotConcord(x, y - (y * 0.02), cc.type = \"kendall\")   # Label points by number (default) plotConcord(x, y - (y * 0.02), identify = TRUE, spread = 25) #> ✓ Auto-labeling 69 points by spread = 25    # S3 data frame method df <- data.frame(x = x, y = y - (y * 0.02)) plotConcord(df, identify = TRUE, spread = 25) #> ✓ Auto-labeling 69 points by spread = 25"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotDoubleHist.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Double-Histogram — plotDoubleHist","title":"Plot a Double-Histogram — plotDoubleHist","text":"Plots two density histograms side--side.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotDoubleHist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Double-Histogram — plotDoubleHist","text":"","code":"plotDoubleHist(   data,   cols,   label = \"Group\",   x.lab = \"value\",   binwidth = 0.05,   main = NULL,   outline = FALSE )"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotDoubleHist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Double-Histogram — plotDoubleHist","text":"data 2-column data.frame numeric data plotted paired density histogram. column names data.frame used group names plot. cols Character. vector colors groups/boxes. plotDoubleHist(), must length = 2. label Character. label grouping variable. x.lab Character. Optional string x-axis. Otherwise one automatically generated (default). binwidth Numeric. Set bin width histogram bars. See geom_histogram(). main Character. Main title plot. See ggtitle() ggplot2 style graphics. outline Logical. Black white outlines histograms.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotDoubleHist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot a Double-Histogram — plotDoubleHist","text":"Stu Field","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotDoubleHist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a Double-Histogram — plotDoubleHist","text":"","code":"dat <- withr::with_seed(123, data.frame(a = rnorm(1000, 2, 0.3),                                         b = rnorm(1000, 3, 0.3))) plotDoubleHist(dat)  plotDoubleHist(dat, label = \"Grouped By\", main = \"Two Distributions\")  plotDoubleHist(dat, label = \"Grouped By\", main = \"Black & White\", outline = TRUE)  plotDoubleHist(dat, binwidth = 0.01)  plotDoubleHist(dat, binwidth = 0.01, outline = TRUE)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotLongitudinal.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Longitudinal Samples by Subject — plotLongitudinal","title":"Plot Longitudinal Samples by Subject — plotLongitudinal","text":"samples plot grouping subjects across time longitudinal study. Can two longitudinal samples (e.g. paired samples). See examples various plotting options. order generate longitudinal plot sample, 4 variables (columns data frame data) must provided: y: Typically field containing y-axis. time: field containing time-series information, x-axis. id: field containing subject identifiers, .e. points line connected. color: field describing groups split/colored. argument default value.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotLongitudinal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Longitudinal Samples by Subject — plotLongitudinal","text":"","code":"plotLongitudinal(   data,   y,   time,   id,   color = Sex,   summary.line = stats::median,   size = 2.5,   main = NULL,   y.lab = bquote(italic(log)[10] ~ (RFU)),   x.lab = NULL,   add.box = FALSE )"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotLongitudinal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Longitudinal Samples by Subject — plotLongitudinal","text":"data data frame containing RFU values plot, typically soma_adat class object. y un-quoted variable name data column containing y-axis (.e. typically \"Response\" variable). time un-quoted variable name data column containing x-axis (.e. typically \"time\" variable). id un-quoted variable name data column containing subject IDs (.e. samples connected). color un-quoted variable name data column indicating color/group lines. Default Sex. grouping desired, simply create dummy variable pass column. See example . summary.line function describing summarize lines. Typically mean() median(). Set NULL suppress summary lines. size Numeric. size points subject lines. main Character. Main title plot. See ggtitle() ggplot2 style graphics. y.lab Character. Optional string set y-axis label. Defaults log10(RFU) SeqId name detected. x.lab Character. Optional string x-axis. Otherwise one automatically generated (default). add.box Logical. boxplots drawn time point? Note: groups subjects together time point looks differences across time points, thus time must factor.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotLongitudinal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Longitudinal Samples by Subject — plotLongitudinal","text":"longitudinal plot samples subject.","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotLongitudinal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Longitudinal Samples by Subject — plotLongitudinal","text":"Stu Field","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotLongitudinal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Longitudinal Samples by Subject — plotLongitudinal","text":"","code":"df <- withr::with_seed(100, data.frame(   Pop       = rep_len(utils::head(LETTERS, 10), 40),   Sample    = sample(c(\"small\", \"medium\", \"large\"), 40, replace = TRUE),   TimePoint = rep(c(\"baseline\", \"6 months\", \"12 months\", \"24 months\"), each = 10),   seq.1234.56 = stats::rnorm(40, mean = 25, sd = 3.5) ))  df$TimePoint <- factor(df$TimePoint, levels = c(\"baseline\", \"6 months\",                                                 \"12 months\", \"24 months\"))   new <- df |>   dplyr::mutate(     id = rep(1:10, times = 4),     time = dplyr::case_when(     # convert TimePoint -> numeric; distances for plotting       TimePoint == \"baseline\" ~ 0,       TimePoint == \"6 months\" ~ 6,       TimePoint == \"12 months\" ~ 12,       TimePoint == \"24 months\" ~ 24),     Sample = dplyr::case_when(  # recode Sample to correlate with IDs       id <= 4 ~ \"small\",       id > 7  ~ \"large\",       TRUE    ~ \"medium\")   )  # No title; no x-axis label; nothing fancy plotLongitudinal(new, y = seq.1234.56, time = TimePoint, id = id, color = Sample)   # Use 'time' variable for proper spacing along x-axis plotLongitudinal(new, y = seq.1234.56, id = id, time = time, color = Sample)   # Use `mean` as the summary lines; compared to `median` default plotLongitudinal(new, y = seq.1234.56, id = id, time = time, color = Sample,                  summary.line = mean)   # Suppress summary line with `NULL` plotLongitudinal(new, y = seq.1234.56, id = id, time = time, color = Pop,                  summary.line = NULL, main = \"No Summary Lines\")   # Boxplots by time point; `time` must be a factor (TimePoint) plotLongitudinal(new, seq.1234.56, id = id, time = TimePoint,                  color = Sample, add.box = TRUE, summary.line = NULL,                  main = \"With Time Point Boxplots\")   # Suppress group-wise colors # by setting up `dummy` column new$dummy <- \"A\"     # call it anything plotLongitudinal(new, seq.1234.56, id = id, time = TimePoint,                  color = dummy, add.box = TRUE, summary.line = NULL,                  main = \"Boxplots | Suppress Group Color\") +   ggplot2::theme(legend.pos = \"none\")   p <- plotLongitudinal(new, y = seq.1234.56, id = id, time = time,                       color = Sample, summary.line = mean)  # Facet by `Sample` p + ggplot2::facet_wrap(rlang::sym(\"Sample\")) +   ggplot2::ggtitle(\"Facet by `Sample`\")"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotPDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot PDF of Empirical Data — plotPDF","title":"Plot PDF of Empirical Data — plotPDF","text":"plotPDF() creates plot smoothed kernel density estimate probability density function (PDF) numeric vector continuous data. plotPDFbyGroup() creates plot series smoothed density estimates probability density function (PDF) stratified/split grouping variable (usually) meta data, e.g. Response grouping. plotPDFlist() creates series plots smoothed kernel density estimates probability density function (PDF) numeric list object.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotPDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot PDF of Empirical Data — plotPDF","text":"","code":"plotPDF(   x,   col = soma_colors$purple,   x.lab = \"values\",   y.lab = \"Probability Density\",   main = \"Kernel Density Estimate\",   lty = \"solid\",   fill = FALSE,   add.gauss = FALSE )  plotPDFbyGroup(   data,   apt,   group.var,   cols,   xlim = NULL,   x.lab = bquote(italic(log)[10] ~ (RFU)),   main = apt,   lty = \"solid\",   fill = FALSE,   ablines = NULL,   include.counts = FALSE )  plotPDFlist(.data, label = \"Group\", main = \"PDF by Group\", ...)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotPDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot PDF of Empirical Data — plotPDF","text":"x numeric vector. col Character. String color line. x.lab Character. Optional string x-axis. Otherwise one automatically generated (default). y.lab Character. Optional string y-axis. Otherwise one automatically generated (default). main Character. Main title plot. See ggtitle() ggplot2 style graphics. lty Character. Passed geom_vline(). See ggtitle(). fill Logical. shaded colors beneath curve added? add.gauss Logical. Gaussian fit data plotted PDF? data, .data soma_adat data.frame object containing RFU data. apt Character. name column data use generating CDFs. Typically aptamer measurement. group.var unquoted column name data containing group labels. cols Character. vector colors groups/boxes. plotDoubleHist(), must length = 2. xlim Numeric. Limits x-axis. See coord_cartesian(). ablines Numeric. vector x-axis position(s) vertical lines added CDF PDF. include.counts Logical. class counts added plot legend? label Character. label grouping variable, .e. entries list represent. ... Additional arguments passed either plotCDFbyGroup() plotPDFbyGroup(), primarily one : x.lab lty cols xlim fill ablines","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotPDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot PDF of Empirical Data — plotPDF","text":"","code":"# `plotPDF()` x <- rnorm(100, mean = 5) plotPDF(x)  plotPDF(x, col = \"dodgerblue\")  plotPDF(x, add.gauss = TRUE)  plotPDF(x, add.gauss = TRUE, fill = TRUE)   # `plotPDFbyGroup()` data  <- SomaDataIO::example_data |> dplyr::filter(SampleType == \"Sample\") anno  <- SomaDataIO::getTargetNames(SomaDataIO::getAnalyteInfo(data)) fsh   <- \"seq.3032.11\" title <- anno[[fsh]] plotPDFbyGroup(log10(data), apt = fsh, group.var = Sex, main = title)  plotPDFbyGroup(log10(data), apt = fsh, group.var = Sex,                fill = TRUE, main = title)  lines <- split(log10(data[[fsh]]), data$Sex) |>   vapply(median, double(1)) plotPDFbyGroup(log10(data), apt = fsh, group.var = Sex,                fill = TRUE, ablines = lines, main = title)   # `plotPDFlist()` x <- withr::with_seed(101,   list(     Group1 = rnorm(100),     Group2 = rnorm(100, sd = 0.5),     Group3 = rnorm(50, mean = 3, sd = 2)   ) ) # warning: RFU values should all be positive! plotPDFlist(x) #> Warning: Non-positive values detected ... #> If RFU data, possibly multi-logging?  plotPDFlist(x, label = \"SplitBy\") #> Warning: Non-positive values detected ... #> If RFU data, possibly multi-logging?  plotPDFlist(x, fill = TRUE) #> Warning: Non-positive values detected ... #> If RFU data, possibly multi-logging?  plotPDFlist(x, x.lab = \"My x-axis\", main = \"Variable `x` PDF\") #> Warning: Non-positive values detected ... #> If RFU data, possibly multi-logging?  medians <- vapply(x, median, 0.0) plotPDFlist(x, ablines = medians, main = \"Variable `x` PDF\") #> Warning: Non-positive values detected ... #> If RFU data, possibly multi-logging?"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotPolygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Polygon Shaded Area — plotPolygon","title":"Plot a Polygon Shaded Area — plotPolygon","text":"Plot shaded area (interval) along line via polygon. Typically shading confidence interval line. just convenient wrapper makes sense polygon() function.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotPolygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Polygon Shaded Area — plotPolygon","text":"","code":"plotPolygon(upper, lower, add = FALSE, col = ggplot2::alpha(\"blue\", 0.5), ...)  addPolygon(upper, lower, col = ggplot2::alpha(\"blue\", 0.5), ...)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotPolygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Polygon Shaded Area — plotPolygon","text":"upper list length 2 containing sequential (x, y) values upper bound, : entry 1 contains vector x-values, entry 2 contains vector y-values. lower list length 2 containing sequential (x, y) values lower bound, : entry 1 contains vector x-values, entry 2 contains vector y-values. add Logical. shaded area (polygon) added existing plot? col Color shaded area. ... Additional arguments passed plot() function. Typically arguments like: main, xlab, ylim, etc.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotPolygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Polygon Shaded Area — plotPolygon","text":"polygon plot","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotPolygon.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Plot a Polygon Shaded Area — plotPolygon","text":"addPolygon(): convenient wrapper adding polygon existing plot simply hard codes add = TRUE argument passes additional arguments plotPolygon().","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotPolygon.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot a Polygon Shaded Area — plotPolygon","text":"Stu Field","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotPolygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a Polygon Shaded Area — plotPolygon","text":"","code":"poly_data <- withr::with_seed(1, rnorm(1)) for ( i in 2:500 ) poly_data[i] <- poly_data[i - 1] + rnorm(1) plotPolygon(list(1:length(poly_data), poly_data + 10),            list(1:length(poly_data), poly_data - 10),            xlab = \"\", ylab = \"\", main = \"Polygon Wrapper\") addPolygon(list(1:length(poly_data), poly_data + 5),            list(1:length(poly_data), poly_data - 5)) lines(poly_data, lwd = 2)   # A full test wrapper (a simulation of genetic drift) polywrap <- function(filename = NULL, seed = 1000) {   figure(filename, width = 960, scale = 1.1)   on.exit(close_figure(filename))   poly_data <- withr::with_seed(seed, rnorm(1)) # initiate random   for ( i in 2:500 ) {     poly_data[i] <- poly_data[i - 1] + rnorm(1)   }   plotPolygon(list(1:length(poly_data), poly_data + 10),               list(1:length(poly_data), poly_data - 10),               xlab = \"\", ylab = \"\", main = \"Polygon Wrapper\")   addPolygon(list(1:length(poly_data), poly_data + 5),              list(1:length(poly_data), poly_data - 5),              col = ggplot2::alpha(\"red\", 0.5))   lines(poly_data, lwd = 2) }  if ( interactive() ) {   file <- tempfile(\"polygon-\", fileext = \".png\")   polywrap(file) }"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotVolcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Volcano Plot — plotVolcano","title":"Create Volcano Plot — plotVolcano","text":"Create volcano plot given vector log2-transformed fold-changes (FC) linear space p-values.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotVolcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Volcano Plot — plotVolcano","text":"","code":"plotVolcano(   data,   FC,   p.value,   labels,   identify = FALSE,   fc.cutoff = 1,   pt.size = 2.5,   text.size = 3,   cutoff = 0.05/nrow(data),   main = NULL,   x.lab = NULL,   ... )"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotVolcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Volcano Plot — plotVolcano","text":"data data.frame object containing least two columns containing 1) log2-transformed fold-changes, 2) linear-space p-values. third column containing point labels must supplied, identify = TRUE. FC Unquoted string identifying column data containing fold-change vector. p.value Unquoted string identifying column data containing p-value vector. labels Unquoted string identifying column data containing point labels, typically \"Aptamer\" names. identify Logical. significant points identified? fc.cutoff Placement cutoff coloring points along fold-change x-axis. Defaults doubling fold-change (1). pt.size Numeric. size points. text.size Numeric. size identifying text. cutoff Horizontal statistical significance cutoff coloring points. Defaults Bonferroni corrected significance alpha = 0.05 \"p-value\" linear space [0, 1]. main Character. Main title plot. See ggtitle() ggplot2 style graphics. x.lab Character. Optional string x-axis. Otherwise one automatically generated (default). ... Arguments passed geom_point().","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotVolcano.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Volcano Plot — plotVolcano","text":"Stu Field","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotVolcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Volcano Plot — plotVolcano","text":"","code":"withr::with_seed(101, {   fc1 <- sort(runif(500, -2.5, 0))   # Z-scores as dummy fold-changes   fc2 <- sort(runif(500, 0, 2.5))    # Z-scores as dummy fold-changes   p1  <- pnorm(fc1)                  # p-values for neg. scores   p2  <- pnorm(fc2, lower.tail = FALSE) # p-values for pos. scores   p   <- jitter(c(p1, p2), amount = 0.1) # add noise   p[p < 0] <- runif(sum(p < 0), 1e-05, 1e-02) # floor p > 0 after jitter   df <- data.frame(fc = c(fc1, fc2), p = p) })  plotVolcano(df, fc, p, cutoff = 0.1)  # lower p-value cutoff   # add some random labels to `df` df <- dplyr::mutate(df, pt_label = dplyr::row_number()) plotVolcano(df, fc, p, labels = pt_label, identify = TRUE, cutoff = 0.01)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotVolcanoHTML.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate HTML-based Volcano Plot — plotVolcanoHTML","title":"Generate HTML-based Volcano Plot — plotVolcanoHTML","text":"Generate HTML-based Volcano Plot","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotVolcanoHTML.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate HTML-based Volcano Plot — plotVolcanoHTML","text":"","code":"plotVolcanoHTML(data, FC, p.vec, cutoff, fc.cutoff, main, x.lab, ...)  # S3 method for data.frame plotVolcanoHTML(   data,   FC = signed.log2.fold.change,   p.vec = p.value,   cutoff = 0.05/nrow(data),   fc.cutoff = 1,   main = NULL,   x.lab = NULL,   target.labels,   ... )  # S3 method for stat_table plotVolcanoHTML(   data,   FC = signed.log2.fold.change,   p.vec = p.value,   cutoff = 0.05/nrow(data$stat.table),   fc.cutoff = 1,   main = NULL,   x.lab = NULL,   apt.data,   ... )"},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotVolcanoHTML.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate HTML-based Volcano Plot — plotVolcanoHTML","text":"data One two object classes: data.frame: Containing log2-transformed fold-changes corresponding p-values. case, optional third column containing Target Names can passed specified target.labels = argument. stat_table: object class c(stat_table, *_table). argument provided, apt.data argument must also passed. FC un-quoted variable name data fold-changes. p.vec un-quoted variable name data p-values. cutoff Horizontal cutoff coloring points. Defaults Bonferroni corrected level significance. fc.cutoff Vertical cutoff coloring coloring points (.e. fold-change). Defaults doubling fold-change. main Character. Main title plot. See ggtitle() ggplot2 style graphics. x.lab Character. Optional string x-axis. Otherwise one automatically generated (default). ... Additional arguments passed plotly::plotly(). target.labels Optional data.frame method. un-quoted variable name data Target Names. apt.data apt.data object containing target information used generate point labels final plot. object can obtained call getAnalyteInfo() original data.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotVolcanoHTML.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Generate HTML-based Volcano Plot — plotVolcanoHTML","text":"plotVolcanoHTML(data.frame): Plot method objects class data.frame. plotVolcanoHTML(stat_table): Plot method objects class stat_table.","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotVolcanoHTML.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate HTML-based Volcano Plot — plotVolcanoHTML","text":"Leigh Alexander, Stu Field","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/plotVolcanoHTML.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate HTML-based Volcano Plot — plotVolcanoHTML","text":"","code":"# Dummy up a fake table with minimal variables data <- SomaDataIO::example_data apts <- SomaDataIO::getAnalytes(data) df <- withr::with_seed(100,    data.frame(               AptName = sample(apts, 50),               t.stat = runif(50, 10, 20),               p.value = runif(50),               signed.log2.fold.change = rnorm(50),               Zscore = rnorm(50),               # generate fake target names               target = paste0(\"Target\", \"_\", sample(LETTERS, 50, replace = TRUE),                               sample(1:50, 50), \"-\",                               sample(letters, 50, replace = TRUE))              ) )  # S3 `data.frame` method # No Target labels -> `NA` plotVolcanoHTML(df, cutoff = 0.1, fc.cutoff = 0.5)  {\"x\":{\"visdat\":{\"6cf57aaed21\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"6cf57aaed21\",\"attrs\":{\"6cf57aaed21\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":[-1.1575712400726719,-0.53029645492905719,2.4456827576668294,-0.83249579799741191,0.41351984882990073,-1.1786831407246281,-1.1740347584692243,-0.33292335097451398,1.3631137069224968,-0.46914733957636851,0.84287563213658301,-1.4579937225420867,-0.40030592004892029,-0.77641728533631826,-0.3692965113010096,1.2401014586167902,-0.10743380833998122,0.17259350622420028,0.25460126824862206,-0.61453382899442277,-1.4292150960010195,-0.33097543461604106,0.12838606337613409,1.018119992463101,-0.25557369156375426,-0.30254101069269523,1.6151906825922744,-0.77371335454725521,0.42400240156265301,-0.58394698132935696,0.41503567889914239,-1.5452616566239883,-0.51874950474805892,-0.27979155435268938,1.0074573820758241,-0.4695699536150329,0.29789703837739434,-0.4177944330726292,-0.8503807762912039,0.6890461943724181,-0.4601961947619635,1.3481843775449067,0.44307138426351189,-0.15092618836077271,0.45554885681481122,-0.040154681298701284,0.45612104354644811,-0.40842502948776938,-2.1364938556100648,0.15682191638659135],\"y\":[0.32593851172773658,1.3727393616610699,0.33427419048138868,0.20066305730754727,0.17182409736019114,1.0603077098358376,0.84289455795182777,0.041685346736720634,0.9117483863963054,0.13735421938358935,0.022104002006614047,1.3629516438558316,1.7077594834174348,0.70098881590799145,0.29663444422929158,0.033206721582855127,0.8588586018257951,0.77161356333373321,0.21707799328552749,0.088375472856823123,0.073976080339929348,0.1034312405196421,1.7207697214822368,0.15609014034783728,0.088792775050412956,0.24534588414362232,0.31870187116653831,0.79217688427888466,1.049361451542326,0.78865949611799169,1.5730262203192411,0.14896835367995198,0.11860496991930375,0.066778644806939888,0.35925446919535309,0.3797218625275538,0.23236223030940537,0.083563117796382674,0.10065057006125994,0.48657919489047541,0.01866534439230436,0.18507377703201897,0.33849415469631611,0.21751169318999858,0.53952021767916347,0.14397788483526433,0.03461133260505047,0.17073516329818236,0.7306271913329061,0.45833694681406334],\"color\":[\"Fold Change\",\"Significant & Fold Change\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Significant & Fold Change\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Significant & Fold Change\",\"Significant\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Significant\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\",\"Fold Change\",\"Significant\",\"Fold Change\",\"Significant\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\"],\"colors\":[\"#707372\",\"#24135F\",\"#00A499\",\"#D69A2D\"],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"opacity\":0.69999999999999996,\"size\":9},\"text\":[\"AptName: seq.5939.42 <br>TargetName: NA <br>Fold Change: 0.45 <br>p-value: 0.472 <br>\",\"AptName: seq.11465.4 <br>TargetName: NA <br>Fold Change: 0.69 <br>p-value: 0.042 <br>\",\"AptName: seq.4968.50 <br>TargetName: NA <br>Fold Change: 5.45 <br>p-value: 0.463 <br>\",\"AptName: seq.5669.26 <br>TargetName: NA <br>Fold Change: 0.56 <br>p-value: 0.630 <br>\",\"AptName: seq.6966.144 <br>TargetName: NA <br>Fold Change: 1.33 <br>p-value: 0.673 <br>\",\"AptName: seq.3488.64 <br>TargetName: NA <br>Fold Change: 0.44 <br>p-value: 0.087 <br>\",\"AptName: seq.3341.33 <br>TargetName: NA <br>Fold Change: 0.44 <br>p-value: 0.144 <br>\",\"AptName: seq.11396.39 <br>TargetName: NA <br>Fold Change: 0.79 <br>p-value: 0.908 <br>\",\"AptName: seq.17466.72 <br>TargetName: NA <br>Fold Change: 2.57 <br>p-value: 0.123 <br>\",\"AptName: seq.14705.1 <br>TargetName: NA <br>Fold Change: 0.72 <br>p-value: 0.729 <br>\",\"AptName: seq.12626.6 <br>TargetName: NA <br>Fold Change: 1.79 <br>p-value: 0.950 <br>\",\"AptName: seq.3143.3 <br>TargetName: NA <br>Fold Change: 0.36 <br>p-value: 0.043 <br>\",\"AptName: seq.9884.8 <br>TargetName: NA <br>Fold Change: 0.76 <br>p-value: 0.020 <br>\",\"AptName: seq.7773.20 <br>TargetName: NA <br>Fold Change: 0.58 <br>p-value: 0.199 <br>\",\"AptName: seq.18916.25 <br>TargetName: NA <br>Fold Change: 0.77 <br>p-value: 0.505 <br>\",\"AptName: seq.19332.1 <br>TargetName: NA <br>Fold Change: 2.36 <br>p-value: 0.926 <br>\",\"AptName: seq.3323.37 <br>TargetName: NA <br>Fold Change: 0.93 <br>p-value: 0.138 <br>\",\"AptName: seq.3473.78 <br>TargetName: NA <br>Fold Change: 1.13 <br>p-value: 0.169 <br>\",\"AptName: seq.13931.22 <br>TargetName: NA <br>Fold Change: 1.19 <br>p-value: 0.607 <br>\",\"AptName: seq.11371.1 <br>TargetName: NA <br>Fold Change: 0.65 <br>p-value: 0.816 <br>\",\"AptName: seq.4160.49 <br>TargetName: NA <br>Fold Change: 0.37 <br>p-value: 0.843 <br>\",\"AptName: seq.16618.7 <br>TargetName: NA <br>Fold Change: 0.79 <br>p-value: 0.788 <br>\",\"AptName: seq.5098.79 <br>TargetName: NA <br>Fold Change: 1.09 <br>p-value: 0.019 <br>\",\"AptName: seq.9838.4 <br>TargetName: NA <br>Fold Change: 2.03 <br>p-value: 0.698 <br>\",\"AptName: seq.8444.3 <br>TargetName: NA <br>Fold Change: 0.84 <br>p-value: 0.815 <br>\",\"AptName: seq.12798.46 <br>TargetName: NA <br>Fold Change: 0.81 <br>p-value: 0.568 <br>\",\"AptName: seq.5493.17 <br>TargetName: NA <br>Fold Change: 3.06 <br>p-value: 0.480 <br>\",\"AptName: seq.10962.46 <br>TargetName: NA <br>Fold Change: 0.58 <br>p-value: 0.161 <br>\",\"AptName: seq.11175.45 <br>TargetName: NA <br>Fold Change: 1.34 <br>p-value: 0.089 <br>\",\"AptName: seq.16606.85 <br>TargetName: NA <br>Fold Change: 0.67 <br>p-value: 0.163 <br>\",\"AptName: seq.9484.75 <br>TargetName: NA <br>Fold Change: 1.33 <br>p-value: 0.027 <br>\",\"AptName: seq.9983.97 <br>TargetName: NA <br>Fold Change: 0.34 <br>p-value: 0.710 <br>\",\"AptName: seq.11910.27 <br>TargetName: NA <br>Fold Change: 0.70 <br>p-value: 0.761 <br>\",\"AptName: seq.5751.14 <br>TargetName: NA <br>Fold Change: 0.82 <br>p-value: 0.857 <br>\",\"AptName: seq.9000.177 <br>TargetName: NA <br>Fold Change: 2.01 <br>p-value: 0.437 <br>\",\"AptName: seq.15447.45 <br>TargetName: NA <br>Fold Change: 0.72 <br>p-value: 0.417 <br>\",\"AptName: seq.10756.34 <br>TargetName: NA <br>Fold Change: 1.23 <br>p-value: 0.586 <br>\",\"AptName: seq.14135.3 <br>TargetName: NA <br>Fold Change: 0.75 <br>p-value: 0.825 <br>\",\"AptName: seq.4763.31 <br>TargetName: NA <br>Fold Change: 0.55 <br>p-value: 0.793 <br>\",\"AptName: seq.8405.108 <br>TargetName: NA <br>Fold Change: 1.61 <br>p-value: 0.326 <br>\",\"AptName: seq.8458.111 <br>TargetName: NA <br>Fold Change: 0.73 <br>p-value: 0.958 <br>\",\"AptName: seq.8318.13 <br>TargetName: NA <br>Fold Change: 2.55 <br>p-value: 0.653 <br>\",\"AptName: seq.19219.71 <br>TargetName: NA <br>Fold Change: 1.36 <br>p-value: 0.459 <br>\",\"AptName: seq.9535.14 <br>TargetName: NA <br>Fold Change: 0.90 <br>p-value: 0.606 <br>\",\"AptName: seq.8890.9 <br>TargetName: NA <br>Fold Change: 1.37 <br>p-value: 0.289 <br>\",\"AptName: seq.19166.15 <br>TargetName: NA <br>Fold Change: 0.97 <br>p-value: 0.718 <br>\",\"AptName: seq.15436.40 <br>TargetName: NA <br>Fold Change: 1.37 <br>p-value: 0.923 <br>\",\"AptName: seq.3283.21 <br>TargetName: NA <br>Fold Change: 0.75 <br>p-value: 0.675 <br>\",\"AptName: seq.19267.14 <br>TargetName: NA <br>Fold Change: 0.23 <br>p-value: 0.186 <br>\",\"AptName: seq.9573.108 <br>TargetName: NA <br>Fold Change: 1.11 <br>p-value: 0.348 <br>\"],\"inherit\":true}},\"layout\":{\"margin\":{\"b\":60,\"l\":60,\"t\":60,\"r\":10},\"title\":\"Volcano Plot\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"<i>log<sub>2<\\/sub><\\/i> Fold-Change\",\"showgrid\":false},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"-<i>log<sub>10<\\/sub><\\/i> p-value\",\"showgrid\":false},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[-1.1575712400726719,2.4456827576668294,-0.83249579799741191,-1.1740347584692243,1.3631137069224968,0.84287563213658301,-0.77641728533631826,1.2401014586167902,-0.61453382899442277,-1.4292150960010195,1.018119992463101,1.6151906825922744,-0.77371335454725521,-0.58394698132935696,-1.5452616566239883,-0.51874950474805892,1.0074573820758241,-0.8503807762912039,0.6890461943724181,1.3481843775449067,-2.1364938556100648],\"y\":[0.32593851172773658,0.33427419048138868,0.20066305730754727,0.84289455795182777,0.9117483863963054,0.022104002006614047,0.70098881590799145,0.033206721582855127,0.088375472856823123,0.073976080339929348,0.15609014034783728,0.31870187116653831,0.79217688427888466,0.78865949611799169,0.14896835367995198,0.11860496991930375,0.35925446919535309,0.10065057006125994,0.48657919489047541,0.18507377703201897,0.7306271913329061],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(0,164,153,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(0,164,153,1)\"}},\"text\":[\"AptName: seq.5939.42 <br>TargetName: NA <br>Fold Change: 0.45 <br>p-value: 0.472 <br>\",\"AptName: seq.4968.50 <br>TargetName: NA <br>Fold Change: 5.45 <br>p-value: 0.463 <br>\",\"AptName: seq.5669.26 <br>TargetName: NA <br>Fold Change: 0.56 <br>p-value: 0.630 <br>\",\"AptName: seq.3341.33 <br>TargetName: NA <br>Fold Change: 0.44 <br>p-value: 0.144 <br>\",\"AptName: seq.17466.72 <br>TargetName: NA <br>Fold Change: 2.57 <br>p-value: 0.123 <br>\",\"AptName: seq.12626.6 <br>TargetName: NA <br>Fold Change: 1.79 <br>p-value: 0.950 <br>\",\"AptName: seq.7773.20 <br>TargetName: NA <br>Fold Change: 0.58 <br>p-value: 0.199 <br>\",\"AptName: seq.19332.1 <br>TargetName: NA <br>Fold Change: 2.36 <br>p-value: 0.926 <br>\",\"AptName: seq.11371.1 <br>TargetName: NA <br>Fold Change: 0.65 <br>p-value: 0.816 <br>\",\"AptName: seq.4160.49 <br>TargetName: NA <br>Fold Change: 0.37 <br>p-value: 0.843 <br>\",\"AptName: seq.9838.4 <br>TargetName: NA <br>Fold Change: 2.03 <br>p-value: 0.698 <br>\",\"AptName: seq.5493.17 <br>TargetName: NA <br>Fold Change: 3.06 <br>p-value: 0.480 <br>\",\"AptName: seq.10962.46 <br>TargetName: NA <br>Fold Change: 0.58 <br>p-value: 0.161 <br>\",\"AptName: seq.16606.85 <br>TargetName: NA <br>Fold Change: 0.67 <br>p-value: 0.163 <br>\",\"AptName: seq.9983.97 <br>TargetName: NA <br>Fold Change: 0.34 <br>p-value: 0.710 <br>\",\"AptName: seq.11910.27 <br>TargetName: NA <br>Fold Change: 0.70 <br>p-value: 0.761 <br>\",\"AptName: seq.9000.177 <br>TargetName: NA <br>Fold Change: 2.01 <br>p-value: 0.437 <br>\",\"AptName: seq.4763.31 <br>TargetName: NA <br>Fold Change: 0.55 <br>p-value: 0.793 <br>\",\"AptName: seq.8405.108 <br>TargetName: NA <br>Fold Change: 1.61 <br>p-value: 0.326 <br>\",\"AptName: seq.8318.13 <br>TargetName: NA <br>Fold Change: 2.55 <br>p-value: 0.653 <br>\",\"AptName: seq.19267.14 <br>TargetName: NA <br>Fold Change: 0.23 <br>p-value: 0.186 <br>\"],\"name\":\"Fold Change\",\"textfont\":{\"color\":\"rgba(0,164,153,1)\"},\"error_y\":{\"color\":\"rgba(0,164,153,1)\"},\"error_x\":{\"color\":\"rgba(0,164,153,1)\"},\"line\":{\"color\":\"rgba(0,164,153,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[0.41351984882990073,-0.33292335097451398,-0.46914733957636851,-0.3692965113010096,-0.10743380833998122,0.17259350622420028,0.25460126824862206,-0.33097543461604106,-0.25557369156375426,-0.30254101069269523,-0.27979155435268938,-0.4695699536150329,0.29789703837739434,-0.4177944330726292,-0.4601961947619635,0.44307138426351189,-0.15092618836077271,0.45554885681481122,-0.040154681298701284,0.45612104354644811,-0.40842502948776938,0.15682191638659135],\"y\":[0.17182409736019114,0.041685346736720634,0.13735421938358935,0.29663444422929158,0.8588586018257951,0.77161356333373321,0.21707799328552749,0.1034312405196421,0.088792775050412956,0.24534588414362232,0.066778644806939888,0.3797218625275538,0.23236223030940537,0.083563117796382674,0.01866534439230436,0.33849415469631611,0.21751169318999858,0.53952021767916347,0.14397788483526433,0.03461133260505047,0.17073516329818236,0.45833694681406334],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(112,115,114,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(112,115,114,1)\"}},\"text\":[\"AptName: seq.6966.144 <br>TargetName: NA <br>Fold Change: 1.33 <br>p-value: 0.673 <br>\",\"AptName: seq.11396.39 <br>TargetName: NA <br>Fold Change: 0.79 <br>p-value: 0.908 <br>\",\"AptName: seq.14705.1 <br>TargetName: NA <br>Fold Change: 0.72 <br>p-value: 0.729 <br>\",\"AptName: seq.18916.25 <br>TargetName: NA <br>Fold Change: 0.77 <br>p-value: 0.505 <br>\",\"AptName: seq.3323.37 <br>TargetName: NA <br>Fold Change: 0.93 <br>p-value: 0.138 <br>\",\"AptName: seq.3473.78 <br>TargetName: NA <br>Fold Change: 1.13 <br>p-value: 0.169 <br>\",\"AptName: seq.13931.22 <br>TargetName: NA <br>Fold Change: 1.19 <br>p-value: 0.607 <br>\",\"AptName: seq.16618.7 <br>TargetName: NA <br>Fold Change: 0.79 <br>p-value: 0.788 <br>\",\"AptName: seq.8444.3 <br>TargetName: NA <br>Fold Change: 0.84 <br>p-value: 0.815 <br>\",\"AptName: seq.12798.46 <br>TargetName: NA <br>Fold Change: 0.81 <br>p-value: 0.568 <br>\",\"AptName: seq.5751.14 <br>TargetName: NA <br>Fold Change: 0.82 <br>p-value: 0.857 <br>\",\"AptName: seq.15447.45 <br>TargetName: NA <br>Fold Change: 0.72 <br>p-value: 0.417 <br>\",\"AptName: seq.10756.34 <br>TargetName: NA <br>Fold Change: 1.23 <br>p-value: 0.586 <br>\",\"AptName: seq.14135.3 <br>TargetName: NA <br>Fold Change: 0.75 <br>p-value: 0.825 <br>\",\"AptName: seq.8458.111 <br>TargetName: NA <br>Fold Change: 0.73 <br>p-value: 0.958 <br>\",\"AptName: seq.19219.71 <br>TargetName: NA <br>Fold Change: 1.36 <br>p-value: 0.459 <br>\",\"AptName: seq.9535.14 <br>TargetName: NA <br>Fold Change: 0.90 <br>p-value: 0.606 <br>\",\"AptName: seq.8890.9 <br>TargetName: NA <br>Fold Change: 1.37 <br>p-value: 0.289 <br>\",\"AptName: seq.19166.15 <br>TargetName: NA <br>Fold Change: 0.97 <br>p-value: 0.718 <br>\",\"AptName: seq.15436.40 <br>TargetName: NA <br>Fold Change: 1.37 <br>p-value: 0.923 <br>\",\"AptName: seq.3283.21 <br>TargetName: NA <br>Fold Change: 0.75 <br>p-value: 0.675 <br>\",\"AptName: seq.9573.108 <br>TargetName: NA <br>Fold Change: 1.11 <br>p-value: 0.348 <br>\"],\"name\":\"Non-Significant\",\"textfont\":{\"color\":\"rgba(112,115,114,1)\"},\"error_y\":{\"color\":\"rgba(112,115,114,1)\"},\"error_x\":{\"color\":\"rgba(112,115,114,1)\"},\"line\":{\"color\":\"rgba(112,115,114,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[-0.40030592004892029,0.12838606337613409,0.42400240156265301,0.41503567889914239],\"y\":[1.7077594834174348,1.7207697214822368,1.049361451542326,1.5730262203192411],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(36,19,95,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(36,19,95,1)\"}},\"text\":[\"AptName: seq.9884.8 <br>TargetName: NA <br>Fold Change: 0.76 <br>p-value: 0.020 <br>\",\"AptName: seq.5098.79 <br>TargetName: NA <br>Fold Change: 1.09 <br>p-value: 0.019 <br>\",\"AptName: seq.11175.45 <br>TargetName: NA <br>Fold Change: 1.34 <br>p-value: 0.089 <br>\",\"AptName: seq.9484.75 <br>TargetName: NA <br>Fold Change: 1.33 <br>p-value: 0.027 <br>\"],\"name\":\"Significant\",\"textfont\":{\"color\":\"rgba(36,19,95,1)\"},\"error_y\":{\"color\":\"rgba(36,19,95,1)\"},\"error_x\":{\"color\":\"rgba(36,19,95,1)\"},\"line\":{\"color\":\"rgba(36,19,95,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[-0.53029645492905719,-1.1786831407246281,-1.4579937225420867],\"y\":[1.3727393616610699,1.0603077098358376,1.3629516438558316],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(214,154,45,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(214,154,45,1)\"}},\"text\":[\"AptName: seq.11465.4 <br>TargetName: NA <br>Fold Change: 0.69 <br>p-value: 0.042 <br>\",\"AptName: seq.3488.64 <br>TargetName: NA <br>Fold Change: 0.44 <br>p-value: 0.087 <br>\",\"AptName: seq.3143.3 <br>TargetName: NA <br>Fold Change: 0.36 <br>p-value: 0.043 <br>\"],\"name\":\"Significant & Fold Change\",\"textfont\":{\"color\":\"rgba(214,154,45,1)\"},\"error_y\":{\"color\":\"rgba(214,154,45,1)\"},\"error_x\":{\"color\":\"rgba(214,154,45,1)\"},\"line\":{\"color\":\"rgba(214,154,45,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} # Add Target labels -> `targets` plotVolcanoHTML(df, cutoff = 0.1, fc.cutoff = 0.5, target.labels = target)  {\"x\":{\"visdat\":{\"6cf16b63e7e\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"6cf16b63e7e\",\"attrs\":{\"6cf16b63e7e\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":[-1.1575712400726719,-0.53029645492905719,2.4456827576668294,-0.83249579799741191,0.41351984882990073,-1.1786831407246281,-1.1740347584692243,-0.33292335097451398,1.3631137069224968,-0.46914733957636851,0.84287563213658301,-1.4579937225420867,-0.40030592004892029,-0.77641728533631826,-0.3692965113010096,1.2401014586167902,-0.10743380833998122,0.17259350622420028,0.25460126824862206,-0.61453382899442277,-1.4292150960010195,-0.33097543461604106,0.12838606337613409,1.018119992463101,-0.25557369156375426,-0.30254101069269523,1.6151906825922744,-0.77371335454725521,0.42400240156265301,-0.58394698132935696,0.41503567889914239,-1.5452616566239883,-0.51874950474805892,-0.27979155435268938,1.0074573820758241,-0.4695699536150329,0.29789703837739434,-0.4177944330726292,-0.8503807762912039,0.6890461943724181,-0.4601961947619635,1.3481843775449067,0.44307138426351189,-0.15092618836077271,0.45554885681481122,-0.040154681298701284,0.45612104354644811,-0.40842502948776938,-2.1364938556100648,0.15682191638659135],\"y\":[0.32593851172773658,1.3727393616610699,0.33427419048138868,0.20066305730754727,0.17182409736019114,1.0603077098358376,0.84289455795182777,0.041685346736720634,0.9117483863963054,0.13735421938358935,0.022104002006614047,1.3629516438558316,1.7077594834174348,0.70098881590799145,0.29663444422929158,0.033206721582855127,0.8588586018257951,0.77161356333373321,0.21707799328552749,0.088375472856823123,0.073976080339929348,0.1034312405196421,1.7207697214822368,0.15609014034783728,0.088792775050412956,0.24534588414362232,0.31870187116653831,0.79217688427888466,1.049361451542326,0.78865949611799169,1.5730262203192411,0.14896835367995198,0.11860496991930375,0.066778644806939888,0.35925446919535309,0.3797218625275538,0.23236223030940537,0.083563117796382674,0.10065057006125994,0.48657919489047541,0.01866534439230436,0.18507377703201897,0.33849415469631611,0.21751169318999858,0.53952021767916347,0.14397788483526433,0.03461133260505047,0.17073516329818236,0.7306271913329061,0.45833694681406334],\"color\":[\"Fold Change\",\"Significant & Fold Change\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Significant & Fold Change\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Significant & Fold Change\",\"Significant\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Significant\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\",\"Fold Change\",\"Significant\",\"Fold Change\",\"Significant\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\"],\"colors\":[\"#707372\",\"#24135F\",\"#00A499\",\"#D69A2D\"],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"opacity\":0.69999999999999996,\"size\":9},\"text\":[\"AptName: seq.5939.42 <br>TargetName: Target_H16-x <br>Fold Change: 0.45 <br>p-value: 0.472 <br>\",\"AptName: seq.11465.4 <br>TargetName: Target_P26-z <br>Fold Change: 0.69 <br>p-value: 0.042 <br>\",\"AptName: seq.4968.50 <br>TargetName: Target_R37-p <br>Fold Change: 5.45 <br>p-value: 0.463 <br>\",\"AptName: seq.5669.26 <br>TargetName: Target_Q1-a <br>Fold Change: 0.56 <br>p-value: 0.630 <br>\",\"AptName: seq.6966.144 <br>TargetName: Target_G2-s <br>Fold Change: 1.33 <br>p-value: 0.673 <br>\",\"AptName: seq.3488.64 <br>TargetName: Target_Z48-j <br>Fold Change: 0.44 <br>p-value: 0.087 <br>\",\"AptName: seq.3341.33 <br>TargetName: Target_D40-u <br>Fold Change: 0.44 <br>p-value: 0.144 <br>\",\"AptName: seq.11396.39 <br>TargetName: Target_Q21-c <br>Fold Change: 0.79 <br>p-value: 0.908 <br>\",\"AptName: seq.17466.72 <br>TargetName: Target_X29-v <br>Fold Change: 2.57 <br>p-value: 0.123 <br>\",\"AptName: seq.14705.1 <br>TargetName: Target_S5-l <br>Fold Change: 0.72 <br>p-value: 0.729 <br>\",\"AptName: seq.12626.6 <br>TargetName: Target_M50-u <br>Fold Change: 1.79 <br>p-value: 0.950 <br>\",\"AptName: seq.3143.3 <br>TargetName: Target_C17-a <br>Fold Change: 0.36 <br>p-value: 0.043 <br>\",\"AptName: seq.9884.8 <br>TargetName: Target_P20-t <br>Fold Change: 0.76 <br>p-value: 0.020 <br>\",\"AptName: seq.7773.20 <br>TargetName: Target_W31-t <br>Fold Change: 0.58 <br>p-value: 0.199 <br>\",\"AptName: seq.18916.25 <br>TargetName: Target_A4-m <br>Fold Change: 0.77 <br>p-value: 0.505 <br>\",\"AptName: seq.19332.1 <br>TargetName: Target_Y6-o <br>Fold Change: 2.36 <br>p-value: 0.926 <br>\",\"AptName: seq.3323.37 <br>TargetName: Target_U15-m <br>Fold Change: 0.93 <br>p-value: 0.138 <br>\",\"AptName: seq.3473.78 <br>TargetName: Target_B44-d <br>Fold Change: 1.13 <br>p-value: 0.169 <br>\",\"AptName: seq.13931.22 <br>TargetName: Target_V46-k <br>Fold Change: 1.19 <br>p-value: 0.607 <br>\",\"AptName: seq.11371.1 <br>TargetName: Target_G8-o <br>Fold Change: 0.65 <br>p-value: 0.816 <br>\",\"AptName: seq.4160.49 <br>TargetName: Target_X43-f <br>Fold Change: 0.37 <br>p-value: 0.843 <br>\",\"AptName: seq.16618.7 <br>TargetName: Target_L49-z <br>Fold Change: 0.79 <br>p-value: 0.788 <br>\",\"AptName: seq.5098.79 <br>TargetName: Target_A30-t <br>Fold Change: 1.09 <br>p-value: 0.019 <br>\",\"AptName: seq.9838.4 <br>TargetName: Target_R28-z <br>Fold Change: 2.03 <br>p-value: 0.698 <br>\",\"AptName: seq.8444.3 <br>TargetName: Target_M13-b <br>Fold Change: 0.84 <br>p-value: 0.815 <br>\",\"AptName: seq.12798.46 <br>TargetName: Target_R39-a <br>Fold Change: 0.81 <br>p-value: 0.568 <br>\",\"AptName: seq.5493.17 <br>TargetName: Target_E12-j <br>Fold Change: 3.06 <br>p-value: 0.480 <br>\",\"AptName: seq.10962.46 <br>TargetName: Target_H34-w <br>Fold Change: 0.58 <br>p-value: 0.161 <br>\",\"AptName: seq.11175.45 <br>TargetName: Target_X10-i <br>Fold Change: 1.34 <br>p-value: 0.089 <br>\",\"AptName: seq.16606.85 <br>TargetName: Target_S22-a <br>Fold Change: 0.67 <br>p-value: 0.163 <br>\",\"AptName: seq.9484.75 <br>TargetName: Target_A19-h <br>Fold Change: 1.33 <br>p-value: 0.027 <br>\",\"AptName: seq.9983.97 <br>TargetName: Target_T25-z <br>Fold Change: 0.34 <br>p-value: 0.710 <br>\",\"AptName: seq.11910.27 <br>TargetName: Target_I33-s <br>Fold Change: 0.70 <br>p-value: 0.761 <br>\",\"AptName: seq.5751.14 <br>TargetName: Target_B24-f <br>Fold Change: 0.82 <br>p-value: 0.857 <br>\",\"AptName: seq.9000.177 <br>TargetName: Target_H27-g <br>Fold Change: 2.01 <br>p-value: 0.437 <br>\",\"AptName: seq.15447.45 <br>TargetName: Target_E18-z <br>Fold Change: 0.72 <br>p-value: 0.417 <br>\",\"AptName: seq.10756.34 <br>TargetName: Target_P41-t <br>Fold Change: 1.23 <br>p-value: 0.586 <br>\",\"AptName: seq.14135.3 <br>TargetName: Target_N35-s <br>Fold Change: 0.75 <br>p-value: 0.825 <br>\",\"AptName: seq.4763.31 <br>TargetName: Target_S45-y <br>Fold Change: 0.55 <br>p-value: 0.793 <br>\",\"AptName: seq.8405.108 <br>TargetName: Target_U7-e <br>Fold Change: 1.61 <br>p-value: 0.326 <br>\",\"AptName: seq.8458.111 <br>TargetName: Target_S32-h <br>Fold Change: 0.73 <br>p-value: 0.958 <br>\",\"AptName: seq.8318.13 <br>TargetName: Target_Z36-u <br>Fold Change: 2.55 <br>p-value: 0.653 <br>\",\"AptName: seq.19219.71 <br>TargetName: Target_R38-q <br>Fold Change: 1.36 <br>p-value: 0.459 <br>\",\"AptName: seq.9535.14 <br>TargetName: Target_M23-y <br>Fold Change: 0.90 <br>p-value: 0.606 <br>\",\"AptName: seq.8890.9 <br>TargetName: Target_W42-l <br>Fold Change: 1.37 <br>p-value: 0.289 <br>\",\"AptName: seq.19166.15 <br>TargetName: Target_W14-q <br>Fold Change: 0.97 <br>p-value: 0.718 <br>\",\"AptName: seq.15436.40 <br>TargetName: Target_N11-y <br>Fold Change: 1.37 <br>p-value: 0.923 <br>\",\"AptName: seq.3283.21 <br>TargetName: Target_A3-e <br>Fold Change: 0.75 <br>p-value: 0.675 <br>\",\"AptName: seq.19267.14 <br>TargetName: Target_M9-j <br>Fold Change: 0.23 <br>p-value: 0.186 <br>\",\"AptName: seq.9573.108 <br>TargetName: Target_E47-s <br>Fold Change: 1.11 <br>p-value: 0.348 <br>\"],\"inherit\":true}},\"layout\":{\"margin\":{\"b\":60,\"l\":60,\"t\":60,\"r\":10},\"title\":\"Volcano Plot\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"<i>log<sub>2<\\/sub><\\/i> Fold-Change\",\"showgrid\":false},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"-<i>log<sub>10<\\/sub><\\/i> p-value\",\"showgrid\":false},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[-1.1575712400726719,2.4456827576668294,-0.83249579799741191,-1.1740347584692243,1.3631137069224968,0.84287563213658301,-0.77641728533631826,1.2401014586167902,-0.61453382899442277,-1.4292150960010195,1.018119992463101,1.6151906825922744,-0.77371335454725521,-0.58394698132935696,-1.5452616566239883,-0.51874950474805892,1.0074573820758241,-0.8503807762912039,0.6890461943724181,1.3481843775449067,-2.1364938556100648],\"y\":[0.32593851172773658,0.33427419048138868,0.20066305730754727,0.84289455795182777,0.9117483863963054,0.022104002006614047,0.70098881590799145,0.033206721582855127,0.088375472856823123,0.073976080339929348,0.15609014034783728,0.31870187116653831,0.79217688427888466,0.78865949611799169,0.14896835367995198,0.11860496991930375,0.35925446919535309,0.10065057006125994,0.48657919489047541,0.18507377703201897,0.7306271913329061],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(0,164,153,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(0,164,153,1)\"}},\"text\":[\"AptName: seq.5939.42 <br>TargetName: Target_H16-x <br>Fold Change: 0.45 <br>p-value: 0.472 <br>\",\"AptName: seq.4968.50 <br>TargetName: Target_R37-p <br>Fold Change: 5.45 <br>p-value: 0.463 <br>\",\"AptName: seq.5669.26 <br>TargetName: Target_Q1-a <br>Fold Change: 0.56 <br>p-value: 0.630 <br>\",\"AptName: seq.3341.33 <br>TargetName: Target_D40-u <br>Fold Change: 0.44 <br>p-value: 0.144 <br>\",\"AptName: seq.17466.72 <br>TargetName: Target_X29-v <br>Fold Change: 2.57 <br>p-value: 0.123 <br>\",\"AptName: seq.12626.6 <br>TargetName: Target_M50-u <br>Fold Change: 1.79 <br>p-value: 0.950 <br>\",\"AptName: seq.7773.20 <br>TargetName: Target_W31-t <br>Fold Change: 0.58 <br>p-value: 0.199 <br>\",\"AptName: seq.19332.1 <br>TargetName: Target_Y6-o <br>Fold Change: 2.36 <br>p-value: 0.926 <br>\",\"AptName: seq.11371.1 <br>TargetName: Target_G8-o <br>Fold Change: 0.65 <br>p-value: 0.816 <br>\",\"AptName: seq.4160.49 <br>TargetName: Target_X43-f <br>Fold Change: 0.37 <br>p-value: 0.843 <br>\",\"AptName: seq.9838.4 <br>TargetName: Target_R28-z <br>Fold Change: 2.03 <br>p-value: 0.698 <br>\",\"AptName: seq.5493.17 <br>TargetName: Target_E12-j <br>Fold Change: 3.06 <br>p-value: 0.480 <br>\",\"AptName: seq.10962.46 <br>TargetName: Target_H34-w <br>Fold Change: 0.58 <br>p-value: 0.161 <br>\",\"AptName: seq.16606.85 <br>TargetName: Target_S22-a <br>Fold Change: 0.67 <br>p-value: 0.163 <br>\",\"AptName: seq.9983.97 <br>TargetName: Target_T25-z <br>Fold Change: 0.34 <br>p-value: 0.710 <br>\",\"AptName: seq.11910.27 <br>TargetName: Target_I33-s <br>Fold Change: 0.70 <br>p-value: 0.761 <br>\",\"AptName: seq.9000.177 <br>TargetName: Target_H27-g <br>Fold Change: 2.01 <br>p-value: 0.437 <br>\",\"AptName: seq.4763.31 <br>TargetName: Target_S45-y <br>Fold Change: 0.55 <br>p-value: 0.793 <br>\",\"AptName: seq.8405.108 <br>TargetName: Target_U7-e <br>Fold Change: 1.61 <br>p-value: 0.326 <br>\",\"AptName: seq.8318.13 <br>TargetName: Target_Z36-u <br>Fold Change: 2.55 <br>p-value: 0.653 <br>\",\"AptName: seq.19267.14 <br>TargetName: Target_M9-j <br>Fold Change: 0.23 <br>p-value: 0.186 <br>\"],\"name\":\"Fold Change\",\"textfont\":{\"color\":\"rgba(0,164,153,1)\"},\"error_y\":{\"color\":\"rgba(0,164,153,1)\"},\"error_x\":{\"color\":\"rgba(0,164,153,1)\"},\"line\":{\"color\":\"rgba(0,164,153,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[0.41351984882990073,-0.33292335097451398,-0.46914733957636851,-0.3692965113010096,-0.10743380833998122,0.17259350622420028,0.25460126824862206,-0.33097543461604106,-0.25557369156375426,-0.30254101069269523,-0.27979155435268938,-0.4695699536150329,0.29789703837739434,-0.4177944330726292,-0.4601961947619635,0.44307138426351189,-0.15092618836077271,0.45554885681481122,-0.040154681298701284,0.45612104354644811,-0.40842502948776938,0.15682191638659135],\"y\":[0.17182409736019114,0.041685346736720634,0.13735421938358935,0.29663444422929158,0.8588586018257951,0.77161356333373321,0.21707799328552749,0.1034312405196421,0.088792775050412956,0.24534588414362232,0.066778644806939888,0.3797218625275538,0.23236223030940537,0.083563117796382674,0.01866534439230436,0.33849415469631611,0.21751169318999858,0.53952021767916347,0.14397788483526433,0.03461133260505047,0.17073516329818236,0.45833694681406334],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(112,115,114,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(112,115,114,1)\"}},\"text\":[\"AptName: seq.6966.144 <br>TargetName: Target_G2-s <br>Fold Change: 1.33 <br>p-value: 0.673 <br>\",\"AptName: seq.11396.39 <br>TargetName: Target_Q21-c <br>Fold Change: 0.79 <br>p-value: 0.908 <br>\",\"AptName: seq.14705.1 <br>TargetName: Target_S5-l <br>Fold Change: 0.72 <br>p-value: 0.729 <br>\",\"AptName: seq.18916.25 <br>TargetName: Target_A4-m <br>Fold Change: 0.77 <br>p-value: 0.505 <br>\",\"AptName: seq.3323.37 <br>TargetName: Target_U15-m <br>Fold Change: 0.93 <br>p-value: 0.138 <br>\",\"AptName: seq.3473.78 <br>TargetName: Target_B44-d <br>Fold Change: 1.13 <br>p-value: 0.169 <br>\",\"AptName: seq.13931.22 <br>TargetName: Target_V46-k <br>Fold Change: 1.19 <br>p-value: 0.607 <br>\",\"AptName: seq.16618.7 <br>TargetName: Target_L49-z <br>Fold Change: 0.79 <br>p-value: 0.788 <br>\",\"AptName: seq.8444.3 <br>TargetName: Target_M13-b <br>Fold Change: 0.84 <br>p-value: 0.815 <br>\",\"AptName: seq.12798.46 <br>TargetName: Target_R39-a <br>Fold Change: 0.81 <br>p-value: 0.568 <br>\",\"AptName: seq.5751.14 <br>TargetName: Target_B24-f <br>Fold Change: 0.82 <br>p-value: 0.857 <br>\",\"AptName: seq.15447.45 <br>TargetName: Target_E18-z <br>Fold Change: 0.72 <br>p-value: 0.417 <br>\",\"AptName: seq.10756.34 <br>TargetName: Target_P41-t <br>Fold Change: 1.23 <br>p-value: 0.586 <br>\",\"AptName: seq.14135.3 <br>TargetName: Target_N35-s <br>Fold Change: 0.75 <br>p-value: 0.825 <br>\",\"AptName: seq.8458.111 <br>TargetName: Target_S32-h <br>Fold Change: 0.73 <br>p-value: 0.958 <br>\",\"AptName: seq.19219.71 <br>TargetName: Target_R38-q <br>Fold Change: 1.36 <br>p-value: 0.459 <br>\",\"AptName: seq.9535.14 <br>TargetName: Target_M23-y <br>Fold Change: 0.90 <br>p-value: 0.606 <br>\",\"AptName: seq.8890.9 <br>TargetName: Target_W42-l <br>Fold Change: 1.37 <br>p-value: 0.289 <br>\",\"AptName: seq.19166.15 <br>TargetName: Target_W14-q <br>Fold Change: 0.97 <br>p-value: 0.718 <br>\",\"AptName: seq.15436.40 <br>TargetName: Target_N11-y <br>Fold Change: 1.37 <br>p-value: 0.923 <br>\",\"AptName: seq.3283.21 <br>TargetName: Target_A3-e <br>Fold Change: 0.75 <br>p-value: 0.675 <br>\",\"AptName: seq.9573.108 <br>TargetName: Target_E47-s <br>Fold Change: 1.11 <br>p-value: 0.348 <br>\"],\"name\":\"Non-Significant\",\"textfont\":{\"color\":\"rgba(112,115,114,1)\"},\"error_y\":{\"color\":\"rgba(112,115,114,1)\"},\"error_x\":{\"color\":\"rgba(112,115,114,1)\"},\"line\":{\"color\":\"rgba(112,115,114,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[-0.40030592004892029,0.12838606337613409,0.42400240156265301,0.41503567889914239],\"y\":[1.7077594834174348,1.7207697214822368,1.049361451542326,1.5730262203192411],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(36,19,95,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(36,19,95,1)\"}},\"text\":[\"AptName: seq.9884.8 <br>TargetName: Target_P20-t <br>Fold Change: 0.76 <br>p-value: 0.020 <br>\",\"AptName: seq.5098.79 <br>TargetName: Target_A30-t <br>Fold Change: 1.09 <br>p-value: 0.019 <br>\",\"AptName: seq.11175.45 <br>TargetName: Target_X10-i <br>Fold Change: 1.34 <br>p-value: 0.089 <br>\",\"AptName: seq.9484.75 <br>TargetName: Target_A19-h <br>Fold Change: 1.33 <br>p-value: 0.027 <br>\"],\"name\":\"Significant\",\"textfont\":{\"color\":\"rgba(36,19,95,1)\"},\"error_y\":{\"color\":\"rgba(36,19,95,1)\"},\"error_x\":{\"color\":\"rgba(36,19,95,1)\"},\"line\":{\"color\":\"rgba(36,19,95,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[-0.53029645492905719,-1.1786831407246281,-1.4579937225420867],\"y\":[1.3727393616610699,1.0603077098358376,1.3629516438558316],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(214,154,45,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(214,154,45,1)\"}},\"text\":[\"AptName: seq.11465.4 <br>TargetName: Target_P26-z <br>Fold Change: 0.69 <br>p-value: 0.042 <br>\",\"AptName: seq.3488.64 <br>TargetName: Target_Z48-j <br>Fold Change: 0.44 <br>p-value: 0.087 <br>\",\"AptName: seq.3143.3 <br>TargetName: Target_C17-a <br>Fold Change: 0.36 <br>p-value: 0.043 <br>\"],\"name\":\"Significant & Fold Change\",\"textfont\":{\"color\":\"rgba(214,154,45,1)\"},\"error_y\":{\"color\":\"rgba(214,154,45,1)\"},\"error_x\":{\"color\":\"rgba(214,154,45,1)\"},\"line\":{\"color\":\"rgba(214,154,45,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} # S3 `stat_table` method; calc.* family # Dummy up a fake `stat_table` object stbl <- list() stbl$stat.table <- SomaDataIO::col2rn(df, \"AptName\") stbl$test <- \"Fake t-test\" stbl$data.dim <- dim(df) stbl$y.response <- \"LHS\" stbl$counts <- c(GroupA = 25, GroupB = 25) stbl$log <- TRUE stbl$data.frame <- \"df\" class(stbl) <- c(\"stat_table\", class(stbl))  # Pick up apt.data ad <- SomaDataIO::getAnalyteInfo(data)  # Target names picked up from `apt.data` plotVolcanoHTML(stbl, apt.data = ad, cutoff = 0.1, fc.cutoff = 0.5)  {\"x\":{\"visdat\":{\"6cf16c0cdd8\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"6cf16c0cdd8\",\"attrs\":{\"6cf16c0cdd8\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":[-1.1575712400726719,-0.53029645492905719,2.4456827576668294,-0.83249579799741191,0.41351984882990073,-1.1786831407246281,-1.1740347584692243,-0.33292335097451398,1.3631137069224968,-0.46914733957636851,0.84287563213658301,-1.4579937225420867,-0.40030592004892029,-0.77641728533631826,-0.3692965113010096,1.2401014586167902,-0.10743380833998122,0.17259350622420028,0.25460126824862206,-0.61453382899442277,-1.4292150960010195,-0.33097543461604106,0.12838606337613409,1.018119992463101,-0.25557369156375426,-0.30254101069269523,1.6151906825922744,-0.77371335454725521,0.42400240156265301,-0.58394698132935696,0.41503567889914239,-1.5452616566239883,-0.51874950474805892,-0.27979155435268938,1.0074573820758241,-0.4695699536150329,0.29789703837739434,-0.4177944330726292,-0.8503807762912039,0.6890461943724181,-0.4601961947619635,1.3481843775449067,0.44307138426351189,-0.15092618836077271,0.45554885681481122,-0.040154681298701284,0.45612104354644811,-0.40842502948776938,-2.1364938556100648,0.15682191638659135],\"y\":[0.32593851172773658,1.3727393616610699,0.33427419048138868,0.20066305730754727,0.17182409736019114,1.0603077098358376,0.84289455795182777,0.041685346736720634,0.9117483863963054,0.13735421938358935,0.022104002006614047,1.3629516438558316,1.7077594834174348,0.70098881590799145,0.29663444422929158,0.033206721582855127,0.8588586018257951,0.77161356333373321,0.21707799328552749,0.088375472856823123,0.073976080339929348,0.1034312405196421,1.7207697214822368,0.15609014034783728,0.088792775050412956,0.24534588414362232,0.31870187116653831,0.79217688427888466,1.049361451542326,0.78865949611799169,1.5730262203192411,0.14896835367995198,0.11860496991930375,0.066778644806939888,0.35925446919535309,0.3797218625275538,0.23236223030940537,0.083563117796382674,0.10065057006125994,0.48657919489047541,0.01866534439230436,0.18507377703201897,0.33849415469631611,0.21751169318999858,0.53952021767916347,0.14397788483526433,0.03461133260505047,0.17073516329818236,0.7306271913329061,0.45833694681406334],\"color\":[\"Fold Change\",\"Significant & Fold Change\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Significant & Fold Change\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Significant & Fold Change\",\"Significant\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Significant\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\",\"Fold Change\",\"Significant\",\"Fold Change\",\"Significant\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\"],\"colors\":[\"#707372\",\"#24135F\",\"#00A499\",\"#D69A2D\"],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"opacity\":0.69999999999999996,\"size\":9},\"text\":[\"AptName: seq.5939.42 <br>TargetName: Tumor necrosis factor ligand superfamily member 12 <br>Fold Change: 0.45 <br>p-value: 0.326 <br>\",\"AptName: seq.11465.4 <br>TargetName: Probable G-protein coupled receptor 135 <br>Fold Change: 0.69 <br>p-value: 1.373 <br>\",\"AptName: seq.4968.50 <br>TargetName: Macrophage-capping protein <br>Fold Change: 5.45 <br>p-value: 0.334 <br>\",\"AptName: seq.5669.26 <br>TargetName: Signal-regulatory protein beta-2 <br>Fold Change: 0.56 <br>p-value: 0.201 <br>\",\"AptName: seq.6966.144 <br>TargetName: Syntaxin-1B <br>Fold Change: 1.33 <br>p-value: 0.172 <br>\",\"AptName: seq.3488.64 <br>TargetName: Catalase <br>Fold Change: 0.44 <br>p-value: 1.060 <br>\",\"AptName: seq.3341.33 <br>TargetName: Tyrosine-protein kinase ABL1 <br>Fold Change: 0.44 <br>p-value: 0.843 <br>\",\"AptName: seq.11396.39 <br>TargetName: Dynein intermediate chain 1, axonemal <br>Fold Change: 0.79 <br>p-value: 0.042 <br>\",\"AptName: seq.17466.72 <br>TargetName: Acyl-CoA synthetase family member 2, mitochondrial <br>Fold Change: 2.57 <br>p-value: 0.912 <br>\",\"AptName: seq.14705.1 <br>TargetName: Vascular endothelial growth factor D <br>Fold Change: 0.72 <br>p-value: 0.137 <br>\",\"AptName: seq.12626.6 <br>TargetName: Sentrin-specific protease 7 <br>Fold Change: 1.79 <br>p-value: 0.022 <br>\",\"AptName: seq.3143.3 <br>TargetName: T-cell surface glycoprotein CD4 <br>Fold Change: 0.36 <br>p-value: 1.363 <br>\",\"AptName: seq.9884.8 <br>TargetName: Peptidyl-prolyl cis-trans isomerase-like 1 <br>Fold Change: 0.76 <br>p-value: 1.708 <br>\",\"AptName: seq.7773.20 <br>TargetName: Killer cell immunoglobulin-like receptor 2DL2 <br>Fold Change: 0.58 <br>p-value: 0.701 <br>\",\"AptName: seq.18916.25 <br>TargetName: Inosine triphosphate pyrophosphatase <br>Fold Change: 0.77 <br>p-value: 0.297 <br>\",\"AptName: seq.19332.1 <br>TargetName: MOB-like protein phocein <br>Fold Change: 2.36 <br>p-value: 0.033 <br>\",\"AptName: seq.3323.37 <br>TargetName: Low-density lipoprotein receptor-related protein 8 <br>Fold Change: 0.93 <br>p-value: 0.859 <br>\",\"AptName: seq.3473.78 <br>TargetName: Thrombopoietin Receptor <br>Fold Change: 1.13 <br>p-value: 0.772 <br>\",\"AptName: seq.13931.22 <br>TargetName: 26S proteasome non-ATPase regulatory subunit 9 <br>Fold Change: 1.19 <br>p-value: 0.217 <br>\",\"AptName: seq.11371.1 <br>TargetName: Probable G-protein coupled receptor 101 <br>Fold Change: 0.65 <br>p-value: 0.088 <br>\",\"AptName: seq.4160.49 <br>TargetName: 72 kDa type IV collagenase <br>Fold Change: 0.37 <br>p-value: 0.074 <br>\",\"AptName: seq.16618.7 <br>TargetName: Early activation antigen CD69 <br>Fold Change: 0.79 <br>p-value: 0.103 <br>\",\"AptName: seq.5098.79 <br>TargetName: Killer cell lectin-like receptor subfamily F member 1 <br>Fold Change: 1.09 <br>p-value: 1.721 <br>\",\"AptName: seq.9838.4 <br>TargetName: Mothers against decapentaplegic homolog 1 <br>Fold Change: 2.03 <br>p-value: 0.156 <br>\",\"AptName: seq.8444.3 <br>TargetName: Magainin-2_XENLA <br>Fold Change: 0.84 <br>p-value: 0.089 <br>\",\"AptName: seq.12798.46 <br>TargetName: Electroneutral sodium bicarbonate exchanger 1 <br>Fold Change: 0.81 <br>p-value: 0.245 <br>\",\"AptName: seq.5493.17 <br>TargetName: Serine/threonine-protein kinase WNK3 <br>Fold Change: 3.06 <br>p-value: 0.319 <br>\",\"AptName: seq.10962.46 <br>TargetName: Fc_MOUSE <br>Fold Change: 0.58 <br>p-value: 0.792 <br>\",\"AptName: seq.11175.45 <br>TargetName: Lysophosphatidylcholine acyltransferase 2 <br>Fold Change: 1.34 <br>p-value: 1.049 <br>\",\"AptName: seq.16606.85 <br>TargetName: Aldose reductase <br>Fold Change: 0.67 <br>p-value: 0.789 <br>\",\"AptName: seq.9484.75 <br>TargetName: Desmoglein-2 <br>Fold Change: 1.33 <br>p-value: 1.573 <br>\",\"AptName: seq.9983.97 <br>TargetName: Inactive serine protease 35 <br>Fold Change: 0.34 <br>p-value: 0.149 <br>\",\"AptName: seq.11910.27 <br>TargetName: Homeobox protein DLX-4 <br>Fold Change: 0.70 <br>p-value: 0.119 <br>\",\"AptName: seq.5751.14 <br>TargetName: LETM1 domain-containing protein 1 <br>Fold Change: 0.82 <br>p-value: 0.067 <br>\",\"AptName: seq.9000.177 <br>TargetName: Neutral and basic amino acid transport protein rBAT <br>Fold Change: 2.01 <br>p-value: 0.359 <br>\",\"AptName: seq.15447.45 <br>TargetName: Sorbitol dehydrogenase <br>Fold Change: 0.72 <br>p-value: 0.380 <br>\",\"AptName: seq.10756.34 <br>TargetName: Urocortin-3 <br>Fold Change: 1.23 <br>p-value: 0.232 <br>\",\"AptName: seq.14135.3 <br>TargetName: Relaxin receptor 1 <br>Fold Change: 0.75 <br>p-value: 0.084 <br>\",\"AptName: seq.4763.31 <br>TargetName: Afamin <br>Fold Change: 0.55 <br>p-value: 0.101 <br>\",\"AptName: seq.8405.108 <br>TargetName: Disintegrin and metalloproteinase domain-containing protein 10 <br>Fold Change: 1.61 <br>p-value: 0.487 <br>\",\"AptName: seq.8458.111 <br>TargetName: Alpha-synuclein <br>Fold Change: 0.73 <br>p-value: 0.019 <br>\",\"AptName: seq.8318.13 <br>TargetName: Sprouty-related, EVH1 domain-containing protein 1 <br>Fold Change: 2.55 <br>p-value: 0.185 <br>\",\"AptName: seq.19219.71 <br>TargetName: Nuclear transport factor 2 <br>Fold Change: 1.36 <br>p-value: 0.338 <br>\",\"AptName: seq.9535.14 <br>TargetName: Fc_MOUSE <br>Fold Change: 0.90 <br>p-value: 0.218 <br>\",\"AptName: seq.8890.9 <br>TargetName: Transmembrane protein 132B <br>Fold Change: 1.37 <br>p-value: 0.540 <br>\",\"AptName: seq.19166.15 <br>TargetName: 40S ribosomal protein S19 <br>Fold Change: 0.97 <br>p-value: 0.144 <br>\",\"AptName: seq.15436.40 <br>TargetName: Receptor activity-modifying protein 1 <br>Fold Change: 1.37 <br>p-value: 0.035 <br>\",\"AptName: seq.3283.21 <br>TargetName: Transforming growth factor-beta-induced protein ig-h3 <br>Fold Change: 0.75 <br>p-value: 0.171 <br>\",\"AptName: seq.19267.14 <br>TargetName: Hydroxyacylglutathione hydrolase, mitochondrial <br>Fold Change: 0.23 <br>p-value: 0.731 <br>\",\"AptName: seq.9573.108 <br>TargetName: Thioredoxin domain-containing protein 11 <br>Fold Change: 1.11 <br>p-value: 0.458 <br>\"],\"inherit\":true}},\"layout\":{\"margin\":{\"b\":60,\"l\":60,\"t\":60,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"<i>log<\\/i><sub>2<\\/sub> Fold Change<br>Reference Group: GroupA\",\"showgrid\":false},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"-<i>log<\\/i><sub>10<\\/sub> p-value\",\"showgrid\":false},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[-1.1575712400726719,2.4456827576668294,-0.83249579799741191,-1.1740347584692243,1.3631137069224968,0.84287563213658301,-0.77641728533631826,1.2401014586167902,-0.61453382899442277,-1.4292150960010195,1.018119992463101,1.6151906825922744,-0.77371335454725521,-0.58394698132935696,-1.5452616566239883,-0.51874950474805892,1.0074573820758241,-0.8503807762912039,0.6890461943724181,1.3481843775449067,-2.1364938556100648],\"y\":[0.32593851172773658,0.33427419048138868,0.20066305730754727,0.84289455795182777,0.9117483863963054,0.022104002006614047,0.70098881590799145,0.033206721582855127,0.088375472856823123,0.073976080339929348,0.15609014034783728,0.31870187116653831,0.79217688427888466,0.78865949611799169,0.14896835367995198,0.11860496991930375,0.35925446919535309,0.10065057006125994,0.48657919489047541,0.18507377703201897,0.7306271913329061],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(0,164,153,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(0,164,153,1)\"}},\"text\":[\"AptName: seq.5939.42 <br>TargetName: Tumor necrosis factor ligand superfamily member 12 <br>Fold Change: 0.45 <br>p-value: 0.326 <br>\",\"AptName: seq.4968.50 <br>TargetName: Macrophage-capping protein <br>Fold Change: 5.45 <br>p-value: 0.334 <br>\",\"AptName: seq.5669.26 <br>TargetName: Signal-regulatory protein beta-2 <br>Fold Change: 0.56 <br>p-value: 0.201 <br>\",\"AptName: seq.3341.33 <br>TargetName: Tyrosine-protein kinase ABL1 <br>Fold Change: 0.44 <br>p-value: 0.843 <br>\",\"AptName: seq.17466.72 <br>TargetName: Acyl-CoA synthetase family member 2, mitochondrial <br>Fold Change: 2.57 <br>p-value: 0.912 <br>\",\"AptName: seq.12626.6 <br>TargetName: Sentrin-specific protease 7 <br>Fold Change: 1.79 <br>p-value: 0.022 <br>\",\"AptName: seq.7773.20 <br>TargetName: Killer cell immunoglobulin-like receptor 2DL2 <br>Fold Change: 0.58 <br>p-value: 0.701 <br>\",\"AptName: seq.19332.1 <br>TargetName: MOB-like protein phocein <br>Fold Change: 2.36 <br>p-value: 0.033 <br>\",\"AptName: seq.11371.1 <br>TargetName: Probable G-protein coupled receptor 101 <br>Fold Change: 0.65 <br>p-value: 0.088 <br>\",\"AptName: seq.4160.49 <br>TargetName: 72 kDa type IV collagenase <br>Fold Change: 0.37 <br>p-value: 0.074 <br>\",\"AptName: seq.9838.4 <br>TargetName: Mothers against decapentaplegic homolog 1 <br>Fold Change: 2.03 <br>p-value: 0.156 <br>\",\"AptName: seq.5493.17 <br>TargetName: Serine/threonine-protein kinase WNK3 <br>Fold Change: 3.06 <br>p-value: 0.319 <br>\",\"AptName: seq.10962.46 <br>TargetName: Fc_MOUSE <br>Fold Change: 0.58 <br>p-value: 0.792 <br>\",\"AptName: seq.16606.85 <br>TargetName: Aldose reductase <br>Fold Change: 0.67 <br>p-value: 0.789 <br>\",\"AptName: seq.9983.97 <br>TargetName: Inactive serine protease 35 <br>Fold Change: 0.34 <br>p-value: 0.149 <br>\",\"AptName: seq.11910.27 <br>TargetName: Homeobox protein DLX-4 <br>Fold Change: 0.70 <br>p-value: 0.119 <br>\",\"AptName: seq.9000.177 <br>TargetName: Neutral and basic amino acid transport protein rBAT <br>Fold Change: 2.01 <br>p-value: 0.359 <br>\",\"AptName: seq.4763.31 <br>TargetName: Afamin <br>Fold Change: 0.55 <br>p-value: 0.101 <br>\",\"AptName: seq.8405.108 <br>TargetName: Disintegrin and metalloproteinase domain-containing protein 10 <br>Fold Change: 1.61 <br>p-value: 0.487 <br>\",\"AptName: seq.8318.13 <br>TargetName: Sprouty-related, EVH1 domain-containing protein 1 <br>Fold Change: 2.55 <br>p-value: 0.185 <br>\",\"AptName: seq.19267.14 <br>TargetName: Hydroxyacylglutathione hydrolase, mitochondrial <br>Fold Change: 0.23 <br>p-value: 0.731 <br>\"],\"name\":\"Fold Change\",\"textfont\":{\"color\":\"rgba(0,164,153,1)\"},\"error_y\":{\"color\":\"rgba(0,164,153,1)\"},\"error_x\":{\"color\":\"rgba(0,164,153,1)\"},\"line\":{\"color\":\"rgba(0,164,153,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[0.41351984882990073,-0.33292335097451398,-0.46914733957636851,-0.3692965113010096,-0.10743380833998122,0.17259350622420028,0.25460126824862206,-0.33097543461604106,-0.25557369156375426,-0.30254101069269523,-0.27979155435268938,-0.4695699536150329,0.29789703837739434,-0.4177944330726292,-0.4601961947619635,0.44307138426351189,-0.15092618836077271,0.45554885681481122,-0.040154681298701284,0.45612104354644811,-0.40842502948776938,0.15682191638659135],\"y\":[0.17182409736019114,0.041685346736720634,0.13735421938358935,0.29663444422929158,0.8588586018257951,0.77161356333373321,0.21707799328552749,0.1034312405196421,0.088792775050412956,0.24534588414362232,0.066778644806939888,0.3797218625275538,0.23236223030940537,0.083563117796382674,0.01866534439230436,0.33849415469631611,0.21751169318999858,0.53952021767916347,0.14397788483526433,0.03461133260505047,0.17073516329818236,0.45833694681406334],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(112,115,114,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(112,115,114,1)\"}},\"text\":[\"AptName: seq.6966.144 <br>TargetName: Syntaxin-1B <br>Fold Change: 1.33 <br>p-value: 0.172 <br>\",\"AptName: seq.11396.39 <br>TargetName: Dynein intermediate chain 1, axonemal <br>Fold Change: 0.79 <br>p-value: 0.042 <br>\",\"AptName: seq.14705.1 <br>TargetName: Vascular endothelial growth factor D <br>Fold Change: 0.72 <br>p-value: 0.137 <br>\",\"AptName: seq.18916.25 <br>TargetName: Inosine triphosphate pyrophosphatase <br>Fold Change: 0.77 <br>p-value: 0.297 <br>\",\"AptName: seq.3323.37 <br>TargetName: Low-density lipoprotein receptor-related protein 8 <br>Fold Change: 0.93 <br>p-value: 0.859 <br>\",\"AptName: seq.3473.78 <br>TargetName: Thrombopoietin Receptor <br>Fold Change: 1.13 <br>p-value: 0.772 <br>\",\"AptName: seq.13931.22 <br>TargetName: 26S proteasome non-ATPase regulatory subunit 9 <br>Fold Change: 1.19 <br>p-value: 0.217 <br>\",\"AptName: seq.16618.7 <br>TargetName: Early activation antigen CD69 <br>Fold Change: 0.79 <br>p-value: 0.103 <br>\",\"AptName: seq.8444.3 <br>TargetName: Magainin-2_XENLA <br>Fold Change: 0.84 <br>p-value: 0.089 <br>\",\"AptName: seq.12798.46 <br>TargetName: Electroneutral sodium bicarbonate exchanger 1 <br>Fold Change: 0.81 <br>p-value: 0.245 <br>\",\"AptName: seq.5751.14 <br>TargetName: LETM1 domain-containing protein 1 <br>Fold Change: 0.82 <br>p-value: 0.067 <br>\",\"AptName: seq.15447.45 <br>TargetName: Sorbitol dehydrogenase <br>Fold Change: 0.72 <br>p-value: 0.380 <br>\",\"AptName: seq.10756.34 <br>TargetName: Urocortin-3 <br>Fold Change: 1.23 <br>p-value: 0.232 <br>\",\"AptName: seq.14135.3 <br>TargetName: Relaxin receptor 1 <br>Fold Change: 0.75 <br>p-value: 0.084 <br>\",\"AptName: seq.8458.111 <br>TargetName: Alpha-synuclein <br>Fold Change: 0.73 <br>p-value: 0.019 <br>\",\"AptName: seq.19219.71 <br>TargetName: Nuclear transport factor 2 <br>Fold Change: 1.36 <br>p-value: 0.338 <br>\",\"AptName: seq.9535.14 <br>TargetName: Fc_MOUSE <br>Fold Change: 0.90 <br>p-value: 0.218 <br>\",\"AptName: seq.8890.9 <br>TargetName: Transmembrane protein 132B <br>Fold Change: 1.37 <br>p-value: 0.540 <br>\",\"AptName: seq.19166.15 <br>TargetName: 40S ribosomal protein S19 <br>Fold Change: 0.97 <br>p-value: 0.144 <br>\",\"AptName: seq.15436.40 <br>TargetName: Receptor activity-modifying protein 1 <br>Fold Change: 1.37 <br>p-value: 0.035 <br>\",\"AptName: seq.3283.21 <br>TargetName: Transforming growth factor-beta-induced protein ig-h3 <br>Fold Change: 0.75 <br>p-value: 0.171 <br>\",\"AptName: seq.9573.108 <br>TargetName: Thioredoxin domain-containing protein 11 <br>Fold Change: 1.11 <br>p-value: 0.458 <br>\"],\"name\":\"Non-Significant\",\"textfont\":{\"color\":\"rgba(112,115,114,1)\"},\"error_y\":{\"color\":\"rgba(112,115,114,1)\"},\"error_x\":{\"color\":\"rgba(112,115,114,1)\"},\"line\":{\"color\":\"rgba(112,115,114,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[-0.40030592004892029,0.12838606337613409,0.42400240156265301,0.41503567889914239],\"y\":[1.7077594834174348,1.7207697214822368,1.049361451542326,1.5730262203192411],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(36,19,95,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(36,19,95,1)\"}},\"text\":[\"AptName: seq.9884.8 <br>TargetName: Peptidyl-prolyl cis-trans isomerase-like 1 <br>Fold Change: 0.76 <br>p-value: 1.708 <br>\",\"AptName: seq.5098.79 <br>TargetName: Killer cell lectin-like receptor subfamily F member 1 <br>Fold Change: 1.09 <br>p-value: 1.721 <br>\",\"AptName: seq.11175.45 <br>TargetName: Lysophosphatidylcholine acyltransferase 2 <br>Fold Change: 1.34 <br>p-value: 1.049 <br>\",\"AptName: seq.9484.75 <br>TargetName: Desmoglein-2 <br>Fold Change: 1.33 <br>p-value: 1.573 <br>\"],\"name\":\"Significant\",\"textfont\":{\"color\":\"rgba(36,19,95,1)\"},\"error_y\":{\"color\":\"rgba(36,19,95,1)\"},\"error_x\":{\"color\":\"rgba(36,19,95,1)\"},\"line\":{\"color\":\"rgba(36,19,95,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[-0.53029645492905719,-1.1786831407246281,-1.4579937225420867],\"y\":[1.3727393616610699,1.0603077098358376,1.3629516438558316],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(214,154,45,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(214,154,45,1)\"}},\"text\":[\"AptName: seq.11465.4 <br>TargetName: Probable G-protein coupled receptor 135 <br>Fold Change: 0.69 <br>p-value: 1.373 <br>\",\"AptName: seq.3488.64 <br>TargetName: Catalase <br>Fold Change: 0.44 <br>p-value: 1.060 <br>\",\"AptName: seq.3143.3 <br>TargetName: T-cell surface glycoprotein CD4 <br>Fold Change: 0.36 <br>p-value: 1.363 <br>\"],\"name\":\"Significant & Fold Change\",\"textfont\":{\"color\":\"rgba(214,154,45,1)\"},\"error_y\":{\"color\":\"rgba(214,154,45,1)\"},\"error_x\":{\"color\":\"rgba(214,154,45,1)\"},\"line\":{\"color\":\"rgba(214,154,45,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]} # Change FC arg on fly -> `Zscore` # Pass args via '...' -> `x.lab` plotVolcanoHTML(stbl, apt.data = ad, cutoff = 0.1, fc.cutoff = 0.5,                 FC = Zscore, x.lab = \"Slope\")  {\"x\":{\"visdat\":{\"6cf4c0a2b93\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"6cf4c0a2b93\",\"attrs\":{\"6cf4c0a2b93\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":[0.66004890117330983,-0.98183441307357733,-1.113643704203382,-0.43734767672944935,-0.5161112466734149,0.41899599057103132,0.13415543671559838,1.0346864545560053,1.6535032260146905,-0.017946817396858026,-0.024203320618598218,0.25024690047494846,-0.33712453601729098,-0.11335370497705054,-0.098882914912717015,0.26408682281607188,0.13898368589133056,-0.2422694988383832,0.059031381723106492,-0.17727186838387762,0.79468026816014492,0.006737786705908121,-0.62979029299375588,-0.25248978256355487,-0.69042216349739494,0.20254214524793529,0.84638143781242747,0.63207406180606041,0.20141352460327988,-0.091070643728435832,0.28948412509664406,-0.05468493920544814,-2.0418498536218213,0.3583692414869461,-0.37260085161605228,1.2683088405183018,2.1686003171661432,-1.2397228421705191,0.58987388823354636,0.12401928857494017,-0.52370778644474369,0.62022800301965708,0.70822158448838091,-0.093198351175584712,-0.29519670091377792,-1.0858152308947902,-0.62481505643968493,-0.23300654313688479,-0.25081686375778672,0.9538953362238527],\"y\":[0.32593851172773658,1.3727393616610699,0.33427419048138868,0.20066305730754727,0.17182409736019114,1.0603077098358376,0.84289455795182777,0.041685346736720634,0.9117483863963054,0.13735421938358935,0.022104002006614047,1.3629516438558316,1.7077594834174348,0.70098881590799145,0.29663444422929158,0.033206721582855127,0.8588586018257951,0.77161356333373321,0.21707799328552749,0.088375472856823123,0.073976080339929348,0.1034312405196421,1.7207697214822368,0.15609014034783728,0.088792775050412956,0.24534588414362232,0.31870187116653831,0.79217688427888466,1.049361451542326,0.78865949611799169,1.5730262203192411,0.14896835367995198,0.11860496991930375,0.066778644806939888,0.35925446919535309,0.3797218625275538,0.23236223030940537,0.083563117796382674,0.10065057006125994,0.48657919489047541,0.01866534439230436,0.18507377703201897,0.33849415469631611,0.21751169318999858,0.53952021767916347,0.14397788483526433,0.03461133260505047,0.17073516329818236,0.7306271913329061,0.45833694681406334],\"color\":[\"Fold Change\",\"Significant & Fold Change\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Significant\",\"Non-Significant\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Significant\",\"Significant\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\",\"Significant & Fold Change\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Fold Change\",\"Significant\",\"Non-Significant\",\"Significant\",\"Non-Significant\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\",\"Fold Change\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Fold Change\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\",\"Fold Change\",\"Non-Significant\",\"Non-Significant\",\"Fold Change\"],\"colors\":[\"#707372\",\"#24135F\",\"#00A499\",\"#D69A2D\"],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"opacity\":0.69999999999999996,\"size\":9},\"text\":[\"AptName: seq.5939.42 <br>TargetName: Tumor necrosis factor ligand superfamily member 12 <br>Fold Change: 1.58 <br>p-value: 0.326 <br>\",\"AptName: seq.11465.4 <br>TargetName: Probable G-protein coupled receptor 135 <br>Fold Change: 0.51 <br>p-value: 1.373 <br>\",\"AptName: seq.4968.50 <br>TargetName: Macrophage-capping protein <br>Fold Change: 0.46 <br>p-value: 0.334 <br>\",\"AptName: seq.5669.26 <br>TargetName: Signal-regulatory protein beta-2 <br>Fold Change: 0.74 <br>p-value: 0.201 <br>\",\"AptName: seq.6966.144 <br>TargetName: Syntaxin-1B <br>Fold Change: 0.70 <br>p-value: 0.172 <br>\",\"AptName: seq.3488.64 <br>TargetName: Catalase <br>Fold Change: 1.34 <br>p-value: 1.060 <br>\",\"AptName: seq.3341.33 <br>TargetName: Tyrosine-protein kinase ABL1 <br>Fold Change: 1.10 <br>p-value: 0.843 <br>\",\"AptName: seq.11396.39 <br>TargetName: Dynein intermediate chain 1, axonemal <br>Fold Change: 2.05 <br>p-value: 0.042 <br>\",\"AptName: seq.17466.72 <br>TargetName: Acyl-CoA synthetase family member 2, mitochondrial <br>Fold Change: 3.15 <br>p-value: 0.912 <br>\",\"AptName: seq.14705.1 <br>TargetName: Vascular endothelial growth factor D <br>Fold Change: 0.99 <br>p-value: 0.137 <br>\",\"AptName: seq.12626.6 <br>TargetName: Sentrin-specific protease 7 <br>Fold Change: 0.98 <br>p-value: 0.022 <br>\",\"AptName: seq.3143.3 <br>TargetName: T-cell surface glycoprotein CD4 <br>Fold Change: 1.19 <br>p-value: 1.363 <br>\",\"AptName: seq.9884.8 <br>TargetName: Peptidyl-prolyl cis-trans isomerase-like 1 <br>Fold Change: 0.79 <br>p-value: 1.708 <br>\",\"AptName: seq.7773.20 <br>TargetName: Killer cell immunoglobulin-like receptor 2DL2 <br>Fold Change: 0.92 <br>p-value: 0.701 <br>\",\"AptName: seq.18916.25 <br>TargetName: Inosine triphosphate pyrophosphatase <br>Fold Change: 0.93 <br>p-value: 0.297 <br>\",\"AptName: seq.19332.1 <br>TargetName: MOB-like protein phocein <br>Fold Change: 1.20 <br>p-value: 0.033 <br>\",\"AptName: seq.3323.37 <br>TargetName: Low-density lipoprotein receptor-related protein 8 <br>Fold Change: 1.10 <br>p-value: 0.859 <br>\",\"AptName: seq.3473.78 <br>TargetName: Thrombopoietin Receptor <br>Fold Change: 0.85 <br>p-value: 0.772 <br>\",\"AptName: seq.13931.22 <br>TargetName: 26S proteasome non-ATPase regulatory subunit 9 <br>Fold Change: 1.04 <br>p-value: 0.217 <br>\",\"AptName: seq.11371.1 <br>TargetName: Probable G-protein coupled receptor 101 <br>Fold Change: 0.88 <br>p-value: 0.088 <br>\",\"AptName: seq.4160.49 <br>TargetName: 72 kDa type IV collagenase <br>Fold Change: 1.73 <br>p-value: 0.074 <br>\",\"AptName: seq.16618.7 <br>TargetName: Early activation antigen CD69 <br>Fold Change: 1.00 <br>p-value: 0.103 <br>\",\"AptName: seq.5098.79 <br>TargetName: Killer cell lectin-like receptor subfamily F member 1 <br>Fold Change: 0.65 <br>p-value: 1.721 <br>\",\"AptName: seq.9838.4 <br>TargetName: Mothers against decapentaplegic homolog 1 <br>Fold Change: 0.84 <br>p-value: 0.156 <br>\",\"AptName: seq.8444.3 <br>TargetName: Magainin-2_XENLA <br>Fold Change: 0.62 <br>p-value: 0.089 <br>\",\"AptName: seq.12798.46 <br>TargetName: Electroneutral sodium bicarbonate exchanger 1 <br>Fold Change: 1.15 <br>p-value: 0.245 <br>\",\"AptName: seq.5493.17 <br>TargetName: Serine/threonine-protein kinase WNK3 <br>Fold Change: 1.80 <br>p-value: 0.319 <br>\",\"AptName: seq.10962.46 <br>TargetName: Fc_MOUSE <br>Fold Change: 1.55 <br>p-value: 0.792 <br>\",\"AptName: seq.11175.45 <br>TargetName: Lysophosphatidylcholine acyltransferase 2 <br>Fold Change: 1.15 <br>p-value: 1.049 <br>\",\"AptName: seq.16606.85 <br>TargetName: Aldose reductase <br>Fold Change: 0.94 <br>p-value: 0.789 <br>\",\"AptName: seq.9484.75 <br>TargetName: Desmoglein-2 <br>Fold Change: 1.22 <br>p-value: 1.573 <br>\",\"AptName: seq.9983.97 <br>TargetName: Inactive serine protease 35 <br>Fold Change: 0.96 <br>p-value: 0.149 <br>\",\"AptName: seq.11910.27 <br>TargetName: Homeobox protein DLX-4 <br>Fold Change: 0.24 <br>p-value: 0.119 <br>\",\"AptName: seq.5751.14 <br>TargetName: LETM1 domain-containing protein 1 <br>Fold Change: 1.28 <br>p-value: 0.067 <br>\",\"AptName: seq.9000.177 <br>TargetName: Neutral and basic amino acid transport protein rBAT <br>Fold Change: 0.77 <br>p-value: 0.359 <br>\",\"AptName: seq.15447.45 <br>TargetName: Sorbitol dehydrogenase <br>Fold Change: 2.41 <br>p-value: 0.380 <br>\",\"AptName: seq.10756.34 <br>TargetName: Urocortin-3 <br>Fold Change: 4.50 <br>p-value: 0.232 <br>\",\"AptName: seq.14135.3 <br>TargetName: Relaxin receptor 1 <br>Fold Change: 0.42 <br>p-value: 0.084 <br>\",\"AptName: seq.4763.31 <br>TargetName: Afamin <br>Fold Change: 1.51 <br>p-value: 0.101 <br>\",\"AptName: seq.8405.108 <br>TargetName: Disintegrin and metalloproteinase domain-containing protein 10 <br>Fold Change: 1.09 <br>p-value: 0.487 <br>\",\"AptName: seq.8458.111 <br>TargetName: Alpha-synuclein <br>Fold Change: 0.70 <br>p-value: 0.019 <br>\",\"AptName: seq.8318.13 <br>TargetName: Sprouty-related, EVH1 domain-containing protein 1 <br>Fold Change: 1.54 <br>p-value: 0.185 <br>\",\"AptName: seq.19219.71 <br>TargetName: Nuclear transport factor 2 <br>Fold Change: 1.63 <br>p-value: 0.338 <br>\",\"AptName: seq.9535.14 <br>TargetName: Fc_MOUSE <br>Fold Change: 0.94 <br>p-value: 0.218 <br>\",\"AptName: seq.8890.9 <br>TargetName: Transmembrane protein 132B <br>Fold Change: 0.81 <br>p-value: 0.540 <br>\",\"AptName: seq.19166.15 <br>TargetName: 40S ribosomal protein S19 <br>Fold Change: 0.47 <br>p-value: 0.144 <br>\",\"AptName: seq.15436.40 <br>TargetName: Receptor activity-modifying protein 1 <br>Fold Change: 0.65 <br>p-value: 0.035 <br>\",\"AptName: seq.3283.21 <br>TargetName: Transforming growth factor-beta-induced protein ig-h3 <br>Fold Change: 0.85 <br>p-value: 0.171 <br>\",\"AptName: seq.19267.14 <br>TargetName: Hydroxyacylglutathione hydrolase, mitochondrial <br>Fold Change: 0.84 <br>p-value: 0.731 <br>\",\"AptName: seq.9573.108 <br>TargetName: Thioredoxin domain-containing protein 11 <br>Fold Change: 1.94 <br>p-value: 0.458 <br>\"],\"inherit\":true}},\"layout\":{\"margin\":{\"b\":60,\"l\":60,\"t\":60,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Slope\",\"showgrid\":false},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"-<i>log<\\/i><sub>10<\\/sub> p-value\",\"showgrid\":false},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[0.66004890117330983,-1.113643704203382,-0.5161112466734149,1.0346864545560053,1.6535032260146905,0.79468026816014492,-0.69042216349739494,0.84638143781242747,0.63207406180606041,-2.0418498536218213,1.2683088405183018,2.1686003171661432,-1.2397228421705191,0.58987388823354636,-0.52370778644474369,0.62022800301965708,0.70822158448838091,-1.0858152308947902,-0.62481505643968493,0.9538953362238527],\"y\":[0.32593851172773658,0.33427419048138868,0.17182409736019114,0.041685346736720634,0.9117483863963054,0.073976080339929348,0.088792775050412956,0.31870187116653831,0.79217688427888466,0.11860496991930375,0.3797218625275538,0.23236223030940537,0.083563117796382674,0.10065057006125994,0.01866534439230436,0.18507377703201897,0.33849415469631611,0.14397788483526433,0.03461133260505047,0.45833694681406334],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(0,164,153,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(0,164,153,1)\"}},\"text\":[\"AptName: seq.5939.42 <br>TargetName: Tumor necrosis factor ligand superfamily member 12 <br>Fold Change: 1.58 <br>p-value: 0.326 <br>\",\"AptName: seq.4968.50 <br>TargetName: Macrophage-capping protein <br>Fold Change: 0.46 <br>p-value: 0.334 <br>\",\"AptName: seq.6966.144 <br>TargetName: Syntaxin-1B <br>Fold Change: 0.70 <br>p-value: 0.172 <br>\",\"AptName: seq.11396.39 <br>TargetName: Dynein intermediate chain 1, axonemal <br>Fold Change: 2.05 <br>p-value: 0.042 <br>\",\"AptName: seq.17466.72 <br>TargetName: Acyl-CoA synthetase family member 2, mitochondrial <br>Fold Change: 3.15 <br>p-value: 0.912 <br>\",\"AptName: seq.4160.49 <br>TargetName: 72 kDa type IV collagenase <br>Fold Change: 1.73 <br>p-value: 0.074 <br>\",\"AptName: seq.8444.3 <br>TargetName: Magainin-2_XENLA <br>Fold Change: 0.62 <br>p-value: 0.089 <br>\",\"AptName: seq.5493.17 <br>TargetName: Serine/threonine-protein kinase WNK3 <br>Fold Change: 1.80 <br>p-value: 0.319 <br>\",\"AptName: seq.10962.46 <br>TargetName: Fc_MOUSE <br>Fold Change: 1.55 <br>p-value: 0.792 <br>\",\"AptName: seq.11910.27 <br>TargetName: Homeobox protein DLX-4 <br>Fold Change: 0.24 <br>p-value: 0.119 <br>\",\"AptName: seq.15447.45 <br>TargetName: Sorbitol dehydrogenase <br>Fold Change: 2.41 <br>p-value: 0.380 <br>\",\"AptName: seq.10756.34 <br>TargetName: Urocortin-3 <br>Fold Change: 4.50 <br>p-value: 0.232 <br>\",\"AptName: seq.14135.3 <br>TargetName: Relaxin receptor 1 <br>Fold Change: 0.42 <br>p-value: 0.084 <br>\",\"AptName: seq.4763.31 <br>TargetName: Afamin <br>Fold Change: 1.51 <br>p-value: 0.101 <br>\",\"AptName: seq.8458.111 <br>TargetName: Alpha-synuclein <br>Fold Change: 0.70 <br>p-value: 0.019 <br>\",\"AptName: seq.8318.13 <br>TargetName: Sprouty-related, EVH1 domain-containing protein 1 <br>Fold Change: 1.54 <br>p-value: 0.185 <br>\",\"AptName: seq.19219.71 <br>TargetName: Nuclear transport factor 2 <br>Fold Change: 1.63 <br>p-value: 0.338 <br>\",\"AptName: seq.19166.15 <br>TargetName: 40S ribosomal protein S19 <br>Fold Change: 0.47 <br>p-value: 0.144 <br>\",\"AptName: seq.15436.40 <br>TargetName: Receptor activity-modifying protein 1 <br>Fold Change: 0.65 <br>p-value: 0.035 <br>\",\"AptName: seq.9573.108 <br>TargetName: Thioredoxin domain-containing protein 11 <br>Fold Change: 1.94 <br>p-value: 0.458 <br>\"],\"name\":\"Fold Change\",\"textfont\":{\"color\":\"rgba(0,164,153,1)\"},\"error_y\":{\"color\":\"rgba(0,164,153,1)\"},\"error_x\":{\"color\":\"rgba(0,164,153,1)\"},\"line\":{\"color\":\"rgba(0,164,153,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[-0.43734767672944935,0.13415543671559838,-0.017946817396858026,-0.024203320618598218,-0.11335370497705054,-0.098882914912717015,0.26408682281607188,0.13898368589133056,-0.2422694988383832,0.059031381723106492,-0.17727186838387762,0.006737786705908121,-0.25248978256355487,0.20254214524793529,-0.091070643728435832,-0.05468493920544814,0.3583692414869461,-0.37260085161605228,0.12401928857494017,-0.093198351175584712,-0.29519670091377792,-0.23300654313688479,-0.25081686375778672],\"y\":[0.20066305730754727,0.84289455795182777,0.13735421938358935,0.022104002006614047,0.70098881590799145,0.29663444422929158,0.033206721582855127,0.8588586018257951,0.77161356333373321,0.21707799328552749,0.088375472856823123,0.1034312405196421,0.15609014034783728,0.24534588414362232,0.78865949611799169,0.14896835367995198,0.066778644806939888,0.35925446919535309,0.48657919489047541,0.21751169318999858,0.53952021767916347,0.17073516329818236,0.7306271913329061],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(112,115,114,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(112,115,114,1)\"}},\"text\":[\"AptName: seq.5669.26 <br>TargetName: Signal-regulatory protein beta-2 <br>Fold Change: 0.74 <br>p-value: 0.201 <br>\",\"AptName: seq.3341.33 <br>TargetName: Tyrosine-protein kinase ABL1 <br>Fold Change: 1.10 <br>p-value: 0.843 <br>\",\"AptName: seq.14705.1 <br>TargetName: Vascular endothelial growth factor D <br>Fold Change: 0.99 <br>p-value: 0.137 <br>\",\"AptName: seq.12626.6 <br>TargetName: Sentrin-specific protease 7 <br>Fold Change: 0.98 <br>p-value: 0.022 <br>\",\"AptName: seq.7773.20 <br>TargetName: Killer cell immunoglobulin-like receptor 2DL2 <br>Fold Change: 0.92 <br>p-value: 0.701 <br>\",\"AptName: seq.18916.25 <br>TargetName: Inosine triphosphate pyrophosphatase <br>Fold Change: 0.93 <br>p-value: 0.297 <br>\",\"AptName: seq.19332.1 <br>TargetName: MOB-like protein phocein <br>Fold Change: 1.20 <br>p-value: 0.033 <br>\",\"AptName: seq.3323.37 <br>TargetName: Low-density lipoprotein receptor-related protein 8 <br>Fold Change: 1.10 <br>p-value: 0.859 <br>\",\"AptName: seq.3473.78 <br>TargetName: Thrombopoietin Receptor <br>Fold Change: 0.85 <br>p-value: 0.772 <br>\",\"AptName: seq.13931.22 <br>TargetName: 26S proteasome non-ATPase regulatory subunit 9 <br>Fold Change: 1.04 <br>p-value: 0.217 <br>\",\"AptName: seq.11371.1 <br>TargetName: Probable G-protein coupled receptor 101 <br>Fold Change: 0.88 <br>p-value: 0.088 <br>\",\"AptName: seq.16618.7 <br>TargetName: Early activation antigen CD69 <br>Fold Change: 1.00 <br>p-value: 0.103 <br>\",\"AptName: seq.9838.4 <br>TargetName: Mothers against decapentaplegic homolog 1 <br>Fold Change: 0.84 <br>p-value: 0.156 <br>\",\"AptName: seq.12798.46 <br>TargetName: Electroneutral sodium bicarbonate exchanger 1 <br>Fold Change: 1.15 <br>p-value: 0.245 <br>\",\"AptName: seq.16606.85 <br>TargetName: Aldose reductase <br>Fold Change: 0.94 <br>p-value: 0.789 <br>\",\"AptName: seq.9983.97 <br>TargetName: Inactive serine protease 35 <br>Fold Change: 0.96 <br>p-value: 0.149 <br>\",\"AptName: seq.5751.14 <br>TargetName: LETM1 domain-containing protein 1 <br>Fold Change: 1.28 <br>p-value: 0.067 <br>\",\"AptName: seq.9000.177 <br>TargetName: Neutral and basic amino acid transport protein rBAT <br>Fold Change: 0.77 <br>p-value: 0.359 <br>\",\"AptName: seq.8405.108 <br>TargetName: Disintegrin and metalloproteinase domain-containing protein 10 <br>Fold Change: 1.09 <br>p-value: 0.487 <br>\",\"AptName: seq.9535.14 <br>TargetName: Fc_MOUSE <br>Fold Change: 0.94 <br>p-value: 0.218 <br>\",\"AptName: seq.8890.9 <br>TargetName: Transmembrane protein 132B <br>Fold Change: 0.81 <br>p-value: 0.540 <br>\",\"AptName: seq.3283.21 <br>TargetName: Transforming growth factor-beta-induced protein ig-h3 <br>Fold Change: 0.85 <br>p-value: 0.171 <br>\",\"AptName: seq.19267.14 <br>TargetName: Hydroxyacylglutathione hydrolase, mitochondrial <br>Fold Change: 0.84 <br>p-value: 0.731 <br>\"],\"name\":\"Non-Significant\",\"textfont\":{\"color\":\"rgba(112,115,114,1)\"},\"error_y\":{\"color\":\"rgba(112,115,114,1)\"},\"error_x\":{\"color\":\"rgba(112,115,114,1)\"},\"line\":{\"color\":\"rgba(112,115,114,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[0.41899599057103132,0.25024690047494846,-0.33712453601729098,0.20141352460327988,0.28948412509664406],\"y\":[1.0603077098358376,1.3629516438558316,1.7077594834174348,1.049361451542326,1.5730262203192411],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(36,19,95,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(36,19,95,1)\"}},\"text\":[\"AptName: seq.3488.64 <br>TargetName: Catalase <br>Fold Change: 1.34 <br>p-value: 1.060 <br>\",\"AptName: seq.3143.3 <br>TargetName: T-cell surface glycoprotein CD4 <br>Fold Change: 1.19 <br>p-value: 1.363 <br>\",\"AptName: seq.9884.8 <br>TargetName: Peptidyl-prolyl cis-trans isomerase-like 1 <br>Fold Change: 0.79 <br>p-value: 1.708 <br>\",\"AptName: seq.11175.45 <br>TargetName: Lysophosphatidylcholine acyltransferase 2 <br>Fold Change: 1.15 <br>p-value: 1.049 <br>\",\"AptName: seq.9484.75 <br>TargetName: Desmoglein-2 <br>Fold Change: 1.22 <br>p-value: 1.573 <br>\"],\"name\":\"Significant\",\"textfont\":{\"color\":\"rgba(36,19,95,1)\"},\"error_y\":{\"color\":\"rgba(36,19,95,1)\"},\"error_x\":{\"color\":\"rgba(36,19,95,1)\"},\"line\":{\"color\":\"rgba(36,19,95,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[-0.98183441307357733,-0.62979029299375588],\"y\":[1.3727393616610699,1.7207697214822368],\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(214,154,45,1)\",\"opacity\":0.69999999999999996,\"size\":9,\"line\":{\"color\":\"rgba(214,154,45,1)\"}},\"text\":[\"AptName: seq.11465.4 <br>TargetName: Probable G-protein coupled receptor 135 <br>Fold Change: 0.51 <br>p-value: 1.373 <br>\",\"AptName: seq.5098.79 <br>TargetName: Killer cell lectin-like receptor subfamily F member 1 <br>Fold Change: 0.65 <br>p-value: 1.721 <br>\"],\"name\":\"Significant & Fold Change\",\"textfont\":{\"color\":\"rgba(214,154,45,1)\"},\"error_y\":{\"color\":\"rgba(214,154,45,1)\"},\"error_x\":{\"color\":\"rgba(214,154,45,1)\"},\"line\":{\"color\":\"rgba(214,154,45,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-gender.html","id":null,"dir":"Reference","previous_headings":"","what":"SomaLogic Sex/Gender Color Palette — style-gender","title":"SomaLogic Sex/Gender Color Palette — style-gender","text":"color palette official SomaLogic sex/gender colors:","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-gender.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SomaLogic Sex/Gender Color Palette — style-gender","text":"","code":"palette_soma_gender(n = 8)  scale_color_soma_gender(...)  scale_fill_soma_gender(...)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-gender.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SomaLogic Sex/Gender Color Palette — style-gender","text":"n number colors. palette set soma_colors2 object, currently 8 elements length, elements reordered. palette recycled necessary. ... Arguments passed ggplot2::discrete_scale(), ggplot2::scale_fill_gradient(), ggplot2::scale_color_gradient().","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-gender.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"SomaLogic Sex/Gender Color Palette — style-gender","text":"scale_color_soma_gender(): color discrete scale use sex/gender. scale_fill_soma_gender(): fill discrete scale use sex/gender.","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-greys.html","id":null,"dir":"Reference","previous_headings":"","what":"SomaLogic Greyscale Color Palette — style-greys","title":"SomaLogic Greyscale Color Palette — style-greys","text":"color palette official SomaLogic greyscale colors.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-greys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SomaLogic Greyscale Color Palette — style-greys","text":"","code":"palette_soma_greys(n)  scale_color_soma_greys(...)  scale_fill_soma_greys(...)"},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-greys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SomaLogic Greyscale Color Palette — style-greys","text":"n number colors. palette set soma_colors_greys object, currently 6 elements length. palette recycled necessary. ... Arguments passed ggplot2::discrete_scale(), ggplot2::scale_fill_gradient(), ggplot2::scale_color_gradient().","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-greys.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"SomaLogic Greyscale Color Palette — style-greys","text":"scale_color_soma_greys(): color discrete scale greyscale graphics. scale_fill_soma_greys(): fill discrete scale greyscale graphics.","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-risk.html","id":null,"dir":"Reference","previous_headings":"","what":"SomaLogic Risk Category Color Palette — style-risk","title":"SomaLogic Risk Category Color Palette — style-risk","text":"color palette official SomaLogic risk categories/trends.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-risk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SomaLogic Risk Category Color Palette — style-risk","text":"","code":"palette_soma_risk(direction = 4, n)  scale_color_soma_risk(direction = 4, ...)  scale_fill_soma_risk(direction = 4, ...)  scale_continuous_color_soma_risk(   low = soma_colors_risk$green,   high = soma_colors_risk$red,   ... )  scale_continuous_fill_soma_risk(   low = soma_colors_risk$green,   high = soma_colors_risk$red,   ... )"},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-risk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SomaLogic Risk Category Color Palette — style-risk","text":"direction Captures number colors direction colors based soma_colors_risk colors, currently 5 colors high low risk. palette recycled necessary. positive number maintains order high (red) low (green) risk. negative number reverses order. special handling n = 2, 3, 4 colors directions. custom ordering, use scale_color_manual() scale_fill_manual() soma_colors_risk colors. n currently used. Included make palette function work scale_color_soma_risk() scale_fill_soma_risk(). ... Arguments passed ggplot2::discrete_scale(), ggplot2::scale_fill_gradient(), ggplot2::scale_color_gradient(). low, high Colours low high ends gradient.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-risk.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"SomaLogic Risk Category Color Palette — style-risk","text":"scale_color_soma_risk(): color discrete scale risk categories. scale_fill_soma_risk(): fill discrete scale risk categories. scale_continuous_color_soma_risk(): color continuous scale risk trends. Currently implemented 2 colors (high risk red low risk green). Multiple colors can done gradient scale_color_gradientn(). scale_continuous_fill_soma_risk(): fill continuous scale risk trends.","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-soma.html","id":null,"dir":"Reference","previous_headings":"","what":"SomaLogic Primary Color Palette — style-soma","title":"SomaLogic Primary Color Palette — style-soma","text":"primary color palette used SomaPlotr. used various scale_*_soma() functions forms basis SomaLogic theme.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-soma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SomaLogic Primary Color Palette — style-soma","text":"","code":"palette_soma(n, random_order = FALSE)  scale_color_soma(...)  scale_fill_soma(...)  scale_continuous_color_soma(   low = soma_colors2$pink,   high = soma_colors2$blue,   ... )  scale_continuous_fill_soma(   low = soma_colors2$pink,   high = soma_colors2$blue,   ... )"},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-soma.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SomaLogic Primary Color Palette — style-soma","text":"Influenced : https://github.com/jrnold/ggthemes","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-soma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SomaLogic Primary Color Palette — style-soma","text":"n number colors. palette set soma_colors2 object, currently 8 elements length. palette recycled necessary. random_order Logical. palette randomly sampled prior rendering plot generate colorful plots. ... Arguments passed ggplot2::discrete_scale(), ggplot2::scale_fill_gradient(), ggplot2::scale_color_gradient(). low, high Colours low high ends gradient.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/style-soma.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"SomaLogic Primary Color Palette — style-soma","text":"scale_color_soma(): color discrete scale SomaLogic graphics. scale_fill_soma(): fill discrete scale SomaLogic graphics. scale_continuous_color_soma(): color continuous scale SomaLogic graphics. scale_continuous_fill_soma(): fill continuous scale SomaLogic graphics.","code":""},{"path":[]},{"path":"https://somalogic.github.io/SomaPlotr/reference/theme_soma.html","id":null,"dir":"Reference","previous_headings":"","what":"SomaLogic ggplot2 Theme — theme_soma","title":"SomaLogic ggplot2 Theme — theme_soma","text":"ggplot2 compatible theme contains specific settings based base theme theme_bw() incorporates elements based requirements SomaLogic's Commercial Marketing teams. allows consistent look, feel, design graphics generated SomaLogic Bioinformatics Team. includes framework gg-style functions plot consistency standardization.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/theme_soma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SomaLogic ggplot2 Theme — theme_soma","text":"","code":"theme_soma(   base_size = 12,   base_family = \"\",   legend.position = c(\"top\", \"none\", \"right\", \"left\", \"bottom\"),   hjust = 0,   aspect_ratio = c(\"none\", \"landscape\", \"profile\") )"},{"path":"https://somalogic.github.io/SomaPlotr/reference/theme_soma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SomaLogic ggplot2 Theme — theme_soma","text":"base_size Numeric. SomaLogic default 12. ggplot2 default 11. See theme_bw(). base_family Character. See theme_bw() examples. legend.position Character. One \"none\", \"top\", \"right\", \"bottom\", \"left\". See theme(). hjust Numeric [0, 1]. Horizontal adjustment title. Left = 0, Center = 0.5, Right = 1. aspect_ratio Character. One \"landscape\" (16:9), \"profile\" (8.5:11), \"none\" (default). \"landscape\" \"profile\" options requested Marketing can/used finalize standard plots.","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/theme_soma.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SomaLogic ggplot2 Theme — theme_soma","text":"Stu Field, Leigh Alexander","code":""},{"path":"https://somalogic.github.io/SomaPlotr/reference/theme_soma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SomaLogic ggplot2 Theme — theme_soma","text":"","code":"library(ggplot2)  # default ggplot2 theme; the `gg` object gg$point  gg$bar  gg$box   # --------------- # SomaLogic Theme # --------------- gg$point + theme_soma()  gg$box + theme_soma()   # The `theme_soma()` allows some arguments: #   1) put legend back to default `ggplot2` position #   2) make font sizes larger: 11 -> 15 gg$point + theme_soma(legend.position = \"right\", base_size = 15)   # ----------------------- # SomaLogic Color Palette # ----------------------- # Combined with the `discrete` color palette gg$point + theme_soma() + scale_color_soma()  # note: `color`  gg$bar + theme_soma() + scale_fill_soma()     # note: `fill`  gg$box + theme_soma() + scale_fill_soma()     # note: `fill`   # Combined with `continuous` color palette # Continuous `color` pt <- mtcars |>   ggplot(aes(x = wt, y = mpg, color = cyl)) +   geom_point(size = 4) pt  pt + scale_continuous_color_soma()   # note: `color`   # Continuous `fill` h <- data.frame(x = withr::with_seed(101, rnorm(500))) |>   ggplot(aes(x, fill = after_stat(count))) +   geom_histogram() h #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  h + scale_continuous_fill_soma()     # note: `fill` #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://somalogic.github.io/SomaPlotr/news/index.html","id":"somaplotr-0009000-development","dir":"Changelog","previous_headings":"","what":"SomaPlotr 0.0.0.9000 (development)","title":"SomaPlotr 0.0.0.9000 (development)","text":"contains functions plotting routines ported SomaLogic Operating Co., Inc. internal code base initial (devel) version branches SomaPlot v3.4.2 current plan release archival versions prior v3.4.2","code":""}]
