% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotPolygon.R
\name{plotPolygon}
\alias{plotPolygon}
\alias{addPolygon}
\title{Plot a Polygon Shaded Area}
\usage{
plotPolygon(upper, lower, add = FALSE, col = ggplot2::alpha("blue", 0.5), ...)

addPolygon(upper, lower, col = ggplot2::alpha("blue", 0.5), ...)
}
\arguments{
\item{upper}{A list of length 2 containing the sequential \verb{(x, y)} values
for the \emph{upper} bound, where:
\enumerate{
\item entry 1 contains a vector of x-values,
\item entry 2 contains a vector of y-values.
}}

\item{lower}{A list of length 2 containing the sequential \verb{(x, y)} values
for the \emph{lower} bound, where:
\enumerate{
\item entry 1 contains a vector of x-values,
\item entry 2 contains a vector of y-values.
}}

\item{add}{Logical. Should the shaded area (polygon) be added
to an existing plot?}

\item{col}{Color for the shaded area.}

\item{...}{Additional arguments passed to the \code{\link[=plot]{plot()}} function.
Typically for arguments like: \code{main}, \code{xlab}, \code{ylim}, etc.}
}
\value{
A polygon plot
}
\description{
Plot a shaded area (interval) along a line via a polygon.
Typically for shading a confidence interval about a line.
This is just a convenient wrapper that makes more sense of the
\code{\link[=polygon]{polygon()}} function.
}
\section{Functions}{
\itemize{
\item \code{addPolygon()}: A convenient wrapper for \emph{adding} a polygon to an existing plot
which simply hard codes the \code{add = TRUE} argument and passes additional
arguments to \code{\link[=plotPolygon]{plotPolygon()}}.

}}
\examples{
poly_data <- withr::with_seed(1, rnorm(1))
for ( i in 2:500 ) poly_data[i] <- poly_data[i - 1] + rnorm(1)
plotPolygon(list(1:length(poly_data), poly_data + 10),
           list(1:length(poly_data), poly_data - 10),
           xlab = "", ylab = "", main = "Polygon Wrapper")
addPolygon(list(1:length(poly_data), poly_data + 5),
           list(1:length(poly_data), poly_data - 5))
lines(poly_data, lwd = 2)

# A full test wrapper (a simulation of genetic drift)
polywrap <- function(filename = NULL, seed = 1000) {
  figure(filename, width = 960, scale = 1.1)
  on.exit(close_figure(filename))
  poly_data <- withr::with_seed(seed, rnorm(1)) # initiate random
  for ( i in 2:500 ) {
    poly_data[i] <- poly_data[i - 1] + rnorm(1)
  }
  plotPolygon(list(1:length(poly_data), poly_data + 10),
              list(1:length(poly_data), poly_data - 10),
              xlab = "", ylab = "", main = "Polygon Wrapper")
  addPolygon(list(1:length(poly_data), poly_data + 5),
             list(1:length(poly_data), poly_data - 5),
             col = ggplot2::alpha("red", 0.5))
  lines(poly_data, lwd = 2)
}

if ( interactive() ) {
  file <- tempfile("polygon-", fileext = ".png")
  polywrap(file)
}
}
\seealso{
\code{\link[=polygon]{polygon()}}

Other base R: 
\code{\link{figure}()}
}
\author{
Stu Field
}
\concept{base R}
