% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotPDF.R, R/plotPDFbyGroup.R, R/plotPDFlist.R
\name{plotPDF}
\alias{plotPDF}
\alias{plotPDFbyGroup}
\alias{plotPDFlist}
\title{Plot PDF of Empirical Data}
\usage{
plotPDF(
  x,
  col = soma_colors$purple,
  x.lab = "values",
  y.lab = "Probability Density",
  main = "Kernel Density Estimate",
  lty = "solid",
  fill = FALSE,
  add.gauss = FALSE
)

plotPDFbyGroup(
  data,
  apt,
  group.var,
  cols,
  xlim = NULL,
  x.lab = bquote(italic(log)[10] ~ (RFU)),
  main = apt,
  lty = "solid",
  fill = FALSE,
  ablines = NULL,
  include.counts = FALSE
)

plotPDFlist(.data, label = "Group", main = "PDF by Group", ...)
}
\arguments{
\item{x}{A numeric vector.}

\item{col}{Character. String for the color of the line.}

\item{x.lab}{Character. Optional string for the x-axis. Otherwise
one is automatically generated (default).}

\item{y.lab}{Character. Optional string for the y-axis. Otherwise
one is automatically generated (default).}

\item{main}{Character. Main title for the plot.
See \code{\link[=ggtitle]{ggtitle()}} for \code{ggplot2} style graphics.}

\item{lty}{Character. Passed to \code{\link[=geom_vline]{geom_vline()}}. See \code{\link[=ggtitle]{ggtitle()}}.}

\item{fill}{Logical. Should shaded colors beneath the curve be added?}

\item{add.gauss}{Logical. Should a Gaussian fit of the
data be plotted with the PDF?}

\item{data, .data}{A \code{soma_adat} or \code{data.frame} object containing RFU data.}

\item{apt}{Character. The name of a column in \code{data} to use in generating
CDFs. Typically an aptamer measurement.}

\item{group.var}{An unquoted column name from \code{data} containing group labels.}

\item{cols}{Character. A \emph{vector} of colors for the groups/boxes.
For \code{\link[=plotDoubleHist]{plotDoubleHist()}}, must be \code{length = 2}.}

\item{xlim}{Numeric. Limits for the x-axis.
See \code{\link[=coord_cartesian]{coord_cartesian()}}.}

\item{ablines}{Numeric. A vector of x-axis position(s) for vertical
lines to be added to the CDF or PDF.}

\item{include.counts}{Logical. Should class counts be added to the plot
legend?}

\item{label}{Character. A label for the grouping
variable, i.e. what the entries of the list represent.}

\item{...}{Additional arguments passed to either
\code{\link[=plotCDFbyGroup]{plotCDFbyGroup()}} or \code{\link[=plotPDFbyGroup]{plotPDFbyGroup()}}, primarily one of:
\itemize{
\item \code{x.lab}
\item \code{lty}
\item \code{cols}
\item \code{xlim}
\item \code{fill}
\item \code{ablines}
}}
}
\description{
\code{\link[=plotPDF]{plotPDF()}} creates a plot of the smoothed kernel density
estimate of the probability density function (PDF) for a numeric
vector of continuous data.

\code{\link[=plotPDFbyGroup]{plotPDFbyGroup()}} creates a plot with a series of smoothed
density estimates of the probability density function (PDF)
stratified/split by a grouping variable of (usually) meta data,
e.g. \code{Response} grouping.

\code{\link[=plotPDFlist]{plotPDFlist()}} creates a series of plots of the smoothed kernel density
estimates of the probability density function (PDF) from a numeric list
object.
}
\examples{
# `plotPDF()`
x <- rnorm(100, mean = 5)
plotPDF(x)
plotPDF(x, col = "dodgerblue")
plotPDF(x, add.gauss = TRUE)
plotPDF(x, add.gauss = TRUE, fill = TRUE)

# `plotPDFbyGroup()`
data  <- SomaDataIO::example_data |> dplyr::filter(SampleType == "Sample")
anno  <- SomaDataIO::getTargetNames(SomaDataIO::getAnalyteInfo(data))
fsh   <- "seq.3032.11"
title <- anno[[fsh]]
plotPDFbyGroup(log10(data), apt = fsh, group.var = Sex, main = title)
plotPDFbyGroup(log10(data), apt = fsh, group.var = Sex,
               fill = TRUE, main = title)
lines <- split(log10(data[[fsh]]), data$Sex) |>
  vapply(median, double(1))
plotPDFbyGroup(log10(data), apt = fsh, group.var = Sex,
               fill = TRUE, ablines = lines, main = title)

# `plotPDFlist()`
x <- withr::with_seed(101,
  mapply(mean = 3:5, n = c(10, 100, 1000), FUN = rnorm) |>
    setNames(paste0("Group", 1:3))
)
lengths(x)

sapply(x, mean)

# warning: RFU values should all be positive!
plotPDFlist(x)
plotPDFlist(x, label = "SplitBy")
plotPDFlist(x, fill = TRUE)
plotPDFlist(x, x.lab = "My x-axis", main = "Variable `x` PDF")
medians <- vapply(x, median, 0.0)
plotPDFlist(x, ablines = medians, main = "Variable `x` PDF")
}
\seealso{
\code{\link[=geom_density]{geom_density()}}

Other cdf-pdf-plots: 
\code{\link{plotCDF}()}
}
\concept{cdf-pdf-plots}
